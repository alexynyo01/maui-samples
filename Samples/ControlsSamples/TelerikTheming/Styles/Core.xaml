<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2022/xaml/maui"
                    xmlns:telerikMaui="clr-namespace:Telerik.Maui;assembly=Telerik.Maui.Core"
                    xmlns:telerikImageEditor="clr-namespace:Telerik.Maui.Controls.ImageEditor;assembly=Telerik.Maui.Controls"
                    x:Class="Telerik.Theming.Styles.Core">

    <!-- This is autogenerated file. Use as reference. Do not modify. -->

    <Shadow x:Key="InputFocusedShadow" Offset="0, 0" Radius="2" Opacity="0.08" />
    <Shadow x:Key="PrimaryInputFocusedShadow" Offset="0, 0" Radius="2" Brush="{DynamicResource RadPrimaryColor}" Opacity="0.3" />
    <!-- Kendo's is achieved by 2 shadows... -->
    <Shadow x:Key="PopupShadow" Offset="0, 4" Radius="5" Opacity="0.04" />

    <!-- BUG: No way to change only the stroke color when Indeterminate / Checked.
         The respective color properties apply both to the border and background color. -->
    <Style x:Key="RadCheckBoxStyle" TargetType="telerik:RadCheckBox">
        <Setter Property="Length" Value="16" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="StrokeWidth" Value="1" />
        <Setter Property="CheckedColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="CheckedSymbolColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <Setter Property="UncheckedColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="IndeterminateColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="IndeterminateSymbolColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <!-- TODO: Discuss this state as it has to be a combination with the checked state by Kendo's design -->
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadCheckBox" BasedOn="{StaticResource RadCheckBoxStyle}" />

    <!-- TODO: [iOS] Get rid of the opacity of text when pressed -->
    <Style x:Key="RadButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="TextColor" Value="{DynamicResource RadOnBaseColor}" />
        <!-- TODO: Kendo's background is a combination of a solid color and a linear gradient -->
        <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <!-- TODO: Kendo's hover background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseHoverColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!-- TODO: Kendo's pressed background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseActiveColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}" />

    <Style x:Key="RadPrimaryButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <!-- TODO: Kendo's background is a combination of a solid color and a linear gradient -->
        <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <!-- TODO: Kendo's hover background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryHoverColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <!-- TODO: Kendo's pressed background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryActiveColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource PrimaryInputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadOutlineButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadPrimaryOutlineButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource PrimaryInputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadFlatButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <!-- TODO: Kendo's hover background is RadPrimaryColor with 4% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadOnAppSurfaceColor}" Opacity="0.04" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <!-- TODO: Kendo's pressed background is RadPrimaryColor with 16% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadOnAppSurfaceColor}" Opacity="0.16" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    --><!-- TODO: Kendo's is achieved by 2px INSIDE border that is 12% RadPrimaryColor --><!--
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadPrimaryFlatButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <!-- TODO: Kendo's hover background is RadPrimaryColor with 4% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadPrimaryColor}" Opacity="0.04" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <!-- TODO: Kendo's pressed background is RadPrimaryColor with 16% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadPrimaryColor}" Opacity="0.16" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    --><!-- TODO: Kendo's is achieved by 2px INSIDE border that is 12% RadPrimaryColor --><!--
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadFlatButtonStyle}">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MinimumWidthRequest" Value="16" />
        <Setter Property="MinimumHeightRequest" Value="16" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="HorizontalLineSeparatorStyle" TargetType="telerik:RadBorder">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="HeightRequest" Value="1" />
    </Style>

    <Style x:Key="RadSegmentedControlStyle" TargetType="telerik:RadSegmentedControl">
        <Setter Property="SegmentTextColor" Value="{DynamicResource RadOnBaseColor}" />
        <Setter Property="SelectedSegmentTextColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <Setter Property="DisabledSegmentTextColor" Value="{DynamicResource RadBaseOnSubtleColor}" />
        <Setter Property="SegmentBackgroundColor" Value="{DynamicResource RadBaseColor}" />
        <Setter Property="SelectedSegmentBackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>
    <Style TargetType="telerik:RadSegmentedControl" BasedOn="{StaticResource RadSegmentedControlStyle}" />

    <Style x:Key="RadBusyIndicatorStyle" TargetType="telerik:RadBusyIndicator">
        <Setter Property="AnimationContentColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>
    <Style TargetType="telerik:RadBusyIndicator" BasedOn="{StaticResource RadBusyIndicatorStyle}" />

    <Style x:Key="RadPrimaryBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <Setter Property="BadgeBackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>

    <Style x:Key="RadInfoBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadOnInfoColor}" />
        <Setter Property="BadgeBackgroundColor" Value="{DynamicResource RadInfoColor}" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadInfoColor}" />
    </Style>

    <Style x:Key="RadSuccessBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadOnSuccessColor}" />
        <Setter Property="BadgeBackgroundColor" Value="{DynamicResource RadSuccessColor}" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadSuccessColor}" />
    </Style>

    <Style x:Key="RadWarningBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadOnWarningColor}" />
        <Setter Property="BadgeBackgroundColor" Value="{DynamicResource RadWarningColor}" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadWarningColor}" />
    </Style>

    <Style x:Key="RadErrorBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadOnErrorColor}" />
        <Setter Property="BadgeBackgroundColor" Value="{DynamicResource RadErrorColor}" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadErrorColor}" />
    </Style>

    <Style x:Key="RadPrimaryOutlineBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BadgeBackgroundColor" Value="Transparent" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BadgeBorderThickness" Value="1" />
    </Style>

    <Style x:Key="RadInfoOutlineBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadInfoColor}" />
        <Setter Property="BadgeBackgroundColor" Value="Transparent" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadInfoColor}" />
        <Setter Property="BadgeBorderThickness" Value="1" />
    </Style>

    <Style x:Key="RadSuccessOutlineBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadSuccessColor}" />
        <Setter Property="BadgeBackgroundColor" Value="Transparent" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadSuccessColor}" />
        <Setter Property="BadgeBorderThickness" Value="1" />
    </Style>

    <Style x:Key="RadWarningOutlineBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadWarningColor}" />
        <Setter Property="BadgeBackgroundColor" Value="Transparent" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadWarningColor}" />
        <Setter Property="BadgeBorderThickness" Value="1" />
    </Style>

    <Style x:Key="RadErrorOutlineBadgeViewStyle" TargetType="telerik:RadBadgeView">
        <Setter Property="BadgeTextColor" Value="{DynamicResource RadErrorColor}" />
        <Setter Property="BadgeBackgroundColor" Value="Transparent" />
        <Setter Property="BadgeBorderColor" Value="{DynamicResource RadErrorColor}" />
        <Setter Property="BadgeBorderThickness" Value="1" />
    </Style>

    <!-- Primary Badges -->
    <Style x:Key="RadPrimaryRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadPrimaryOutlineRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryOutlineBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadPrimaryRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <Style x:Key="RadPrimaryOutlineRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryOutlineBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <!-- Applicable for pill as well -->
    <Style x:Key="RadPrimaryCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <!-- Applicable for outline pill as well -->
    <Style x:Key="RadPrimaryOutlineCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryOutlineBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <Style x:Key="RadPrimaryDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <Style x:Key="RadPrimaryOutlineDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadPrimaryOutlineBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <!-- Info Badges -->
    <Style x:Key="RadInfoRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadInfoOutlineRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoOutlineBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadInfoRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <Style x:Key="RadInfoOutlineRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoOutlineRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <!-- Applicable for pill as well -->
    <Style x:Key="RadInfoCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <!-- Applicable for outline pill as well -->
    <Style x:Key="RadInfoOutlineCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoOutlineBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <Style x:Key="RadInfoDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <Style x:Key="RadInfoOutlineDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadInfoOutlineBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <!-- Success Badges -->
    <Style x:Key="RadSuccessRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadSuccessOutlineRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessOutlineBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadSuccessRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <Style x:Key="RadSuccessOutlineRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessOutlineRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <!-- Applicable for pill as well -->
    <Style x:Key="RadSuccessCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <!-- Applicable for outline pill as well -->
    <Style x:Key="RadSuccessOutlineCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessOutlineBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <Style x:Key="RadSuccessDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <Style x:Key="RadSuccessOutlineDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadSuccessOutlineBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <!-- Warning Badges -->
    <Style x:Key="RadWarningRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadWarningOutlineRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningOutlineBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadWarningRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <Style x:Key="RadWarningOutlineRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningOutlineRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <!-- Applicable for pill as well -->
    <Style x:Key="RadWarningCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <!-- Applicable for outline pill as well -->
    <Style x:Key="RadWarningOutlineCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningOutlineBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <Style x:Key="RadWarningDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <Style x:Key="RadWarningOutlineDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadWarningOutlineBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <!-- Error Badges -->
    <Style x:Key="RadErrorRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadErrorOutlineRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorOutlineBadgeViewStyle}">
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeBorderThickness" Value="0" />
        <Setter Property="BadgeCornerRadius" Value="0" />
    </Style>

    <Style x:Key="RadErrorRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <Style x:Key="RadErrorOutlineRoundedRectangleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorOutlineRectangleBadgeViewStyle}">
        <Setter Property="BadgeCornerRadius" Value="2" />
    </Style>

    <!-- Applicable for pill as well -->
    <Style x:Key="RadErrorCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <!-- Applicable for outline pill as well -->
    <Style x:Key="RadErrorOutlineCircleBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorOutlineBadgeViewStyle}">
        <Setter Property="MinimumWidthRequest" Value="20" />
        <Setter Property="MinimumHeightRequest" Value="20" />
        <Setter Property="BadgeCornerRadius" Value="10" />
    </Style>

    <Style x:Key="RadErrorDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <Style x:Key="RadErrorOutlineDotBadgeViewStyle" TargetType="telerik:RadBadgeView" BasedOn="{StaticResource RadErrorOutlineBadgeViewStyle}">
        <Setter Property="BadgeMinimumWidth" Value="10" />
        <Setter Property="BadgeMinimumHeight" Value="10" />
        <Setter Property="BadgeCornerRadius" Value="5" />
    </Style>

    <!-- TODO: Expose readonly visual state -->
    <!-- BUG: Can focus multiple entries at the same time; applicable for other inputs as well -->
    <!-- BUG: Focused VisualState's Shadow applies to TEXT?!
         and requires 2 taps/clicks to be able to start typing; applicable for other inputs as well -->
    <Style x:Key="RadEntryStyle" TargetType="telerik:RadEntry">
        <Setter Property="PlaceholderColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <!-- TODO: Kendo's is a simple X that is 50% the text color; applicable for other inputs as well -->
        <Setter Property="ClearButtonColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadBorderAltColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusedBorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadEntry" BasedOn="{StaticResource RadEntryStyle}" />

    <Style x:Key="RadOutlineEntryStyle" TargetType="telerik:RadEntry" BasedOn="{StaticResource RadEntryStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's are both 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- BUG: [iOS] Does not apply at all -->
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadFlatEntryStyle" TargetType="telerik:RadEntry" BasedOn="{StaticResource RadEntryStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- BUG: [iOS] Does not apply correctly, it is treated as 0px for each side -->
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="FocusedBorderThickness" Value="0, 0, 0, 1" />
        <!-- BUG: [iOS] Does not apply correctly, it is treated as 4px for each side -->
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- BUG: [iOS] Does not apply at all -->
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- TODO: Enable different look of entry when input is invalid; currently only an error message is displayed -->
    <Style x:Key="RadMaskedEntryBaseStyle" TargetType="telerik:RadMaskedEntryBase">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="ClearButtonColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="EntryBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
    </Style>

    <Style x:Key="RadOutlineMaskedEntryBaseStyle" TargetType="telerik:RadMaskedEntryBase" BasedOn="{StaticResource RadMaskedEntryBaseStyle}">
        <Setter Property="EntryBackgroundColor" Value="Transparent" />
        <Setter Property="ControlTemplate">
            <ControlTemplate>
                <!-- HACK -->
                <!-- TODO: Enable specifying the style of the entry easily -->
                <telerik:RadEntry Style="{StaticResource RadOutlineEntryStyle}"
                                  AutomationId="MaskedEntryView"
                                  IsValueValid="{Binding IsValueValid, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ValidationErrorMessage="{Binding ActualValidationErrorMessage, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  IsReadOnly="{Binding IsReadOnly, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  IsEnabled="{Binding IsEnabled, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  Placeholder="{Binding Placeholder, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  FontFamily="{Binding FontFamily, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  FontSize="{Binding FontSize, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ClearButtonVisibility="{Binding ClearButtonVisibility, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ClearButtonColor="{Binding ClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  HoveredClearButtonColor="{Binding HoveredClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  PressedClearButtonColor="{Binding PressedClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  BackgroundColor="{Binding EntryBackgroundColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  CornerRadius="{Binding EntryCornerRadius, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  TextColor="{Binding TextColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  Keyboard="{Binding Keyboard, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}" />
            </ControlTemplate>
        </Setter>
    </Style>

    <Style x:Key="RadFlatMaskedEntryBaseStyle" TargetType="telerik:RadMaskedEntryBase" BasedOn="{StaticResource RadMaskedEntryBaseStyle}">
        <Setter Property="EntryBackgroundColor" Value="Transparent" />
        <Setter Property="EntryCornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="ControlTemplate">
            <ControlTemplate>
                <!-- HACK -->
                <!-- TODO: Enable specifying the style of the entry easily -->
                <telerik:RadEntry Style="{StaticResource RadFlatEntryStyle}"
                                  AutomationId="MaskedEntryView"
                                  IsValueValid="{Binding IsValueValid, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ValidationErrorMessage="{Binding ActualValidationErrorMessage, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  IsReadOnly="{Binding IsReadOnly, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  IsEnabled="{Binding IsEnabled, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  Placeholder="{Binding Placeholder, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  FontFamily="{Binding FontFamily, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  FontSize="{Binding FontSize, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ClearButtonVisibility="{Binding ClearButtonVisibility, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  ClearButtonColor="{Binding ClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  HoveredClearButtonColor="{Binding HoveredClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  PressedClearButtonColor="{Binding PressedClearButtonColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  BackgroundColor="{Binding EntryBackgroundColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  CornerRadius="{Binding EntryCornerRadius, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  TextColor="{Binding TextColor, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}"
                                  Keyboard="{Binding Keyboard, Source={x:RelativeSource AncestorType={Type telerik:RadMaskedEntryBase}}}" />
            </ControlTemplate>
        </Setter>
    </Style>

    <!-- XamlC error XFC0000: Cannot resolve type "http://schemas.telerik.com/2022/xaml/maui:RadDateTimeMaskedEntry" -->
    <!-- <Style TargetType="telerik:RadDateTimeMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" /> -->
    <Style TargetType="telerik:RadEmailMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" />
    <Style TargetType="telerik:RadIPMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" />
    <Style TargetType="telerik:RadNumericMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" />
    <Style TargetType="telerik:RadRegexMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" />
    <Style TargetType="telerik:RadTextMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" />
    <!-- XamlC error XFC0000: Cannot resolve type "http://schemas.telerik.com/2022/xaml/maui:RadTimeSpanMaskedEntry" -->
    <!-- <Style TargetType="telerik:RadTimeSpanMaskedEntry" BasedOn="{StaticResource RadMaskedEntryBaseStyle}" /> -->

    <Style x:Key="NumericInputButtonBaseStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="BorderColor" Value="Transparent" />
        <!-- WORKAROUND: For not being able to set directional CornerRadius to a RadButton -->
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style x:Key="NumericInputIncreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource NumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 4, 0, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="End" />
    </Style>
    <Style x:Key="NumericInputDecreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource NumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 0, 4, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="Start" />
    </Style>
    <Style x:Key="NumericInputEntryStyle" TargetType="telerik:NumericInputEntry" BasedOn="{StaticResource RadEntryStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusedBorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <!-- <Setter Property="CornerRadius" Value="4, 0, 0, 4" /> -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <ControlTemplate x:Key="RadNumericInputTemplate">
        <telerik:RadBorder x:Name="rootBorder"
                           BackgroundColor="{Binding BackgroundColor, Source={x:Reference PART_Entry}}"
                           BorderBrush="{Binding BorderBrush, Source={x:Reference PART_Entry}}"
                           BorderThickness="1"
                           CornerRadius="4">
            <Grid ColumnDefinitions="*, Auto" IsClippedToBounds="True">
                <telerik:NumericInputEntry x:Name="PART_Entry"
                                           Style="{TemplateBinding ActualEntryStyle}" />
                <telerik:RadBorder Grid.Column="1"
                                   BorderBrush="{Binding BorderBrush, Source={x:Reference rootBorder}}"
                                   BorderThickness="1, 0, 0, 0">
                    <Grid RowDefinitions="*, *">
                        <telerik:NumericInputButton Style="{TemplateBinding ActualIncreaseButtonStyle}" />
                        <telerik:NumericInputButton Grid.Row="1"
                                                    Style="{TemplateBinding ActualDecreaseButtonStyle}" />
                    </Grid>
                </telerik:RadBorder>
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>
    <!-- BUG: Cannot override ControlTemplate through Style -->
    <Style x:Key="RadNumericInputStyle" TargetType="telerik:RadNumericInput">
        <Setter Property="IncreaseButtonText" Value="{x:Static telerikMaui:TelerikFont.IconUpDir}" />
        <Setter Property="IncreaseButtonStyle" Value="{StaticResource NumericInputIncreaseButtonStyle}" />
        <Setter Property="DecreaseButtonText" Value="{x:Static telerikMaui:TelerikFont.IconDownDir}" />
        <Setter Property="DecreaseButtonStyle" Value="{StaticResource NumericInputDecreaseButtonStyle}" />
        <Setter Property="EntryStyle" Value="{StaticResource NumericInputEntryStyle}" />
        <!-- EXCEPTION: when switching swatch, navigating back or trying to disable while focused: Cannot access a disposed object. -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadNumericInput" BasedOn="{StaticResource RadNumericInputStyle}" />

    <Style x:Key="OutlineNumericInputButtonBaseStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource RadOutlineButtonStyle}">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="BorderColor" Value="Transparent" />
        <!-- WORKAROUND: For not being able to set directional CornerRadius to a RadButton -->
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style x:Key="OutlineNumericInputIncreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource OutlineNumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 4, 0, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="End" />
    </Style>
    <Style x:Key="OutlineNumericInputDecreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource OutlineNumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 0, 4, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="Start" />
    </Style>
     <Style x:Key="OutlineNumericInputEntryStyle" TargetType="telerik:NumericInputEntry" BasedOn="{StaticResource RadOutlineEntryStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusedBorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <!-- <Setter Property="CornerRadius" Value="4, 0, 0, 4" /> -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style x:Key="RadOutlineNumericInputStyle" TargetType="telerik:RadNumericInput" BasedOn="{StaticResource RadNumericInputStyle}">
        <Setter Property="IncreaseButtonStyle" Value="{StaticResource OutlineNumericInputIncreaseButtonStyle}" />
        <Setter Property="DecreaseButtonStyle" Value="{StaticResource OutlineNumericInputDecreaseButtonStyle}" />
        <Setter Property="EntryStyle" Value="{StaticResource OutlineNumericInputEntryStyle}" />
    </Style>

    <Style x:Key="FlatNumericInputButtonBaseStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource RadFlatButtonStyle}">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="BorderColor" Value="Transparent" />
        <!-- WORKAROUND: For not being able to set directional CornerRadius to a RadButton -->
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style x:Key="FlatNumericInputIncreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource FlatNumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 4, 0, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="End" />
    </Style>
    <Style x:Key="FlatNumericInputDecreaseButtonStyle" TargetType="telerik:NumericInputButton" BasedOn="{StaticResource FlatNumericInputButtonBaseStyle}">
        <!-- BUG: RadButton's CornerRadius is not directional, it is int -->
        <!-- <Setter Property="CornerRadius" Value="0, 0, 4, 0" /> -->
        <Setter Property="VerticalContentAlignment" Value="Start" />
    </Style>
    <Style x:Key="FlatNumericInputEntryStyle" TargetType="telerik:NumericInputEntry" BasedOn="{StaticResource RadFlatEntryStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusedBorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <!-- <Setter Property="CornerRadius" Value="4, 0, 0, 4" /> -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <ControlTemplate x:Key="RadFlatNumericInputTemplate">
        <telerik:RadBorder x:Name="rootBorder"
                           BackgroundColor="{Binding BackgroundColor, Source={x:Reference PART_Entry}}"
                           BorderBrush="{Binding BorderBrush, Source={x:Reference PART_Entry}}"
                           BorderThickness="0, 0, 0, 1"
                           CornerRadius="4, 4, 0, 0">
            <Grid ColumnDefinitions="*, Auto">
                <telerik:NumericInputEntry x:Name="PART_Entry"
                                           Style="{TemplateBinding ActualEntryStyle}" />
                <Grid Grid.Column="1"
                      RowDefinitions="*, *"
                      IsClippedToBounds="True">
                    <telerik:NumericInputButton Style="{TemplateBinding ActualIncreaseButtonStyle}" />
                    <telerik:NumericInputButton Grid.Row="1"
                                                Style="{TemplateBinding ActualDecreaseButtonStyle}" />
                </Grid>
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>
    <Style x:Key="RadFlatNumericInputStyle" TargetType="telerik:RadNumericInput" BasedOn="{StaticResource RadNumericInputStyle}">
        <Setter Property="IncreaseButtonStyle" Value="{StaticResource FlatNumericInputIncreaseButtonStyle}" />
        <Setter Property="DecreaseButtonStyle" Value="{StaticResource FlatNumericInputDecreaseButtonStyle}" />
        <Setter Property="EntryStyle" Value="{StaticResource FlatNumericInputEntryStyle}" />
    </Style>

    <Style x:Key="InputClearButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Text" Value="&#xe84e;" />
        <!-- TODO: Kendo's is 50% default text color -->
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0, 0, 4, 0" />
        <Setter Property="WidthRequest" Value="20" />
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Center" />
        <!-- TODO: Ask Kendo designers what should the VisualStates of this button be -->
    </Style>

    <Style x:Key="InputDropDownButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="FontFamily" Value="{Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Text" Value="{Static telerikMaui:TelerikFont.IconDownDir}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <!-- TODO: Should be 1 px on the left only -->
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinimumWidthRequest" Value="28" />
        <Setter Property="WidthRequest" Value="NaN" />
        <Setter Property="HeightRequest" Value="NaN" />
        <Setter Property="VerticalOptions" Value="Fill" />
        <!-- TODO: Ask Kendo designers what should the VisualStates of this button be -->
    </Style>

    <Style x:Key="OutlineInputDropDownButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource InputDropDownButtonStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- Should be 50% RadOnAppSurfaceColor -->
        <Setter Property="BorderColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <!-- TODO: Ask Kendo designers what should the VisualStates of this button be -->
    </Style>

    <Style x:Key="FlatInputDropDownButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource InputDropDownButtonStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderWidth" Value="0" />
        <!-- TODO: Ask Kendo designers what should the VisualStates of this button be -->
    </Style>

    <DataTemplate x:Key="InputTokenTemplate">
        <!-- TODO: Background should be 30% RadOnAppSurfaceColor -->
        <!-- TODO: Border should be 8% RadOnAppSurfaceColor -->
        <!-- TODO: Discuss whether we should support states for the tokens -->
        <telerik:RadBorder BackgroundColor="{DynamicResource RadBaseColor}"
                           BorderColor="{DynamicResource RadBaseEmphasisColor}"
                           BorderThickness="1"
                           CornerRadius="4"
                           VerticalOptions="Center"
                           Padding="4"
                           Margin="0, 0, 1, 0">
            <HorizontalStackLayout>
                <Label Text="{Binding}"
                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                       VerticalTextAlignment="Center"
                       Margin="4, 0" />
                <Label Text="{x:Static telerikMaui:TelerikFont.IconCancel2}"
                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                       FontFamily="{x:Static telerikMaui:TelerikFont.Name}"
                       FontSize="12"
                       VerticalTextAlignment="Center">
                    <!-- TODO: Expose a command for this -->
                    <!-- <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="InputTokenClearIconTapped" />
                    </Label.GestureRecognizers> -->
                </Label>
            </HorizontalStackLayout>
        </telerik:RadBorder>
    </DataTemplate>

    <DataTemplate x:Key="OutlineInputTokenTemplate">
        <!-- TODO: Discuss whether we should support states for the tokens -->
        <telerik:RadBorder BackgroundColor="Transparent"
                           BorderColor="{DynamicResource RadOnAppSurfaceColor}"
                           BorderThickness="1"
                           CornerRadius="4"
                           VerticalOptions="Center"
                           Padding="4"
                           Margin="0, 0, 1, 0">
            <HorizontalStackLayout>
                <Label Text="{Binding}"
                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                       VerticalTextAlignment="Center"
                       Margin="4, 0" />
                <Label Text="{x:Static telerikMaui:TelerikFont.IconCancel2}"
                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                       FontFamily="{x:Static telerikMaui:TelerikFont.Name}"
                       FontSize="12"
                       VerticalTextAlignment="Center">
                    <!-- TODO: Expose a command for this -->
                    <!-- <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="InputTokenClearIconTapped" />
                    </Label.GestureRecognizers> -->
                </Label>
            </HorizontalStackLayout>
        </telerik:RadBorder>
    </DataTemplate>

    <DataTemplate x:Key="InputShowMoreTemplate">
        <!-- TODO: Background should be 30% RadOnAppSurfaceColor -->
        <!-- TODO: Border should be 8% RadOnAppSurfaceColor -->
        <!-- TODO: Discuss whether we should support states for the tokens -->
        <telerik:RadBorder BackgroundColor="{DynamicResource RadBaseColor}"
                           BorderColor="{DynamicResource RadBaseEmphasisColor}"
                           BorderThickness="1"
                           CornerRadius="4"
                           VerticalOptions="Center"
                           Padding="4"
                           Margin="0, 0, 1, 0">
            <Label Text="{Binding ., StringFormat='+{0}'}"
                   TextColor="{DynamicResource RadOnAppSurfaceColor}"
                   VerticalTextAlignment="Center"
                   Margin="4, 0" />
        </telerik:RadBorder>
    </DataTemplate>

    <DataTemplate x:Key="OutlineInputShowMoreTemplate">
        <!-- TODO: Discuss whether we should support states for the tokens -->
        <telerik:RadBorder BackgroundColor="Transparent"
                           BorderColor="{DynamicResource RadOnAppSurfaceColor}"
                           BorderThickness="1"
                           CornerRadius="4"
                           VerticalOptions="Center"
                           Padding="4"
                           Margin="0, 0, 1, 0">
            <Label Text="{Binding ., StringFormat='+{0}'}"
                   TextColor="{DynamicResource RadOnAppSurfaceColor}"
                   VerticalTextAlignment="Center"
                   Margin="4, 0" />
        </telerik:RadBorder>
    </DataTemplate>

    <DataTemplate x:Key="AutoCompleteNoResultsTemplate">
        <!-- TODO: Adjust FontSize, Padding, MinimumHeightRequest -->
        <Label AutomationId="RadAutoCompleteNoResultsLabel"
               Text="{Binding NoResultsMessage, Source={RelativeSource AncestorType={x:Type telerik:RadAutoComplete}}}"
               TextColor="{DynamicResource RadOnAppSurfaceColor}"
               Padding="8, 4"
               FontSize="14" />
    </DataTemplate>

    <DataTemplate x:Key="AutoCompleteSuggestionItemTemplate">
        <telerik:RadBorder MinimumWidthRequest="{Binding Width, Source={RelativeSource AncestorType={x:Type telerik:RadAutoComplete}}}"
                           MinimumHeightRequest="28"
                           Padding="8, 4">
            <!-- TODO: Adjust FontSize, Padding, MinimumHeightRequest -->
            <telerik:RadHighlightLabel UnformattedText="{Binding}"
                                       HighlightTextColor="{Binding SuggestionItemHighlightTextColor, Source={RelativeSource AncestorType={x:Type telerik:RadAutoComplete}}}"
                                       HighlightText="{Binding SearchText, Source={RelativeSource AncestorType={x:Type telerik:RadAutoComplete}}}"
                                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                                       FontSize="14"
                                       VerticalOptions="Center" />
        </telerik:RadBorder>
    </DataTemplate>

    <!-- BUG: Focused VisualState's Shadow applies to TEXT?! -->
    <!-- TODO: Expose easier way to override suggestion item text color -->
    <!-- TODO: Expose a way to add shadow to the popup containing the suggestion view -->
    <Style x:Key="RadAutoCompleteStyle" TargetType="telerik:RadAutoComplete">
        <Setter Property="PlaceholderColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadBorderAltColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="ClearButtonStyle" Value="{StaticResource InputClearButtonStyle}" />
        <Setter Property="SuggestionViewBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="SuggestionViewBorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="SuggestionViewCornerRadius" Value="0" />
        <Setter Property="SuggestionViewBorderThickness" Value="1" />
        <Setter Property="SuggestionItemHighlightTextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="SuggestionItemTemplate" Value="{StaticResource AutoCompleteSuggestionItemTemplate}" />
        <Setter Property="TokenTemplate" Value="{StaticResource InputTokenTemplate}" />
        <!-- EXCEPTION: (Applicable for SuggestionViewTemplate, too)-->
        <!-- <Setter Property="NoResultsTemplate" Value="{StaticResource AutoCompleteNoResultsTemplate}" /> -->
        <Setter Property="ShowMoreTemplate" Value="{StaticResource InputShowMoreTemplate}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadAutoComplete" BasedOn="{StaticResource RadAutoCompleteStyle}" />

    <Style x:Key="RadOutlineAutoCompleteStyle" TargetType="telerik:RadAutoComplete" BasedOn="{StaticResource RadAutoCompleteStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's are both 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadFlatAutoCompleteStyle" TargetType="telerik:RadAutoComplete" BasedOn="{StaticResource RadAutoCompleteStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- BUG: [iOS] Does not apply at all -->
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <DataTemplate x:Key="ComboBoxDropDownItemTemplate">
        <telerik:RadBorder MinimumWidthRequest="{Binding Width, Source={RelativeSource AncestorType={x:Type telerik:RadComboBox}}}"
                           MinimumHeightRequest="28"
                           Padding="8, 4">
            <!-- TODO: Adjust FontSize, Padding, MinimumHeightRequest -->
            <telerik:RadHighlightLabel UnformattedText="{Binding}"
                                       HighlightTextColor="{Binding HighlightTextColor, Source={RelativeSource AncestorType={x:Type telerik:RadComboBox}}}"
                                       HighlightText="{Binding SearchText, Source={RelativeSource AncestorType={x:Type telerik:RadComboBox}}}"
                                       TextColor="{DynamicResource RadOnAppSurfaceColor}"
                                       FontSize="14"
                                       VerticalOptions="Center" />
        </telerik:RadBorder>
    </DataTemplate>

    <DataTemplate x:Key="ComboBoxSelectedDropDownItemTemplate">
        <telerik:RadBorder MinimumWidthRequest="{Binding Width, Source={RelativeSource AncestorType={x:Type telerik:RadComboBox}}}"
                           BackgroundColor="{DynamicResource RadPrimaryColor}"
                           MinimumHeightRequest="28"
                           Padding="8, 4">
            <!-- TODO: Adjust FontSize, Padding, MinimumHeightRequest -->
            <!-- TODO: Fix conflict of colors - if HighlightTextColor is used, will be primary on primary color.
                       Use RadPrimaryOnSubtleColor as a temporary solution just to see text -->
            <telerik:RadHighlightLabel UnformattedText="{Binding}"
                                       HighlightTextColor="{DynamicResource RadPrimaryOnSubtleColor}"
                                       HighlightText="{Binding SearchText, Source={RelativeSource AncestorType={x:Type telerik:RadComboBox}}}"
                                       TextColor="{DynamicResource RadAppSurfaceColor}"
                                       FontSize="14"
                                       VerticalOptions="Center" />
        </telerik:RadBorder>
    </DataTemplate>

    <!-- TODO: Expose easier way to override dropdown item text color -->
    <!-- TODO: Expose a way to add shadow to the dropdown -->
    <!-- TODO: Discuss whether the dropdown items should have additional visual states - e.g., PointerOver -->
    <Style x:Key="RadComboBoxStyle" TargetType="telerik:RadComboBox">
        <Setter Property="PlaceholderColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadBorderAltColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="ClearButtonStyle" Value="{StaticResource InputClearButtonStyle}" />
        <Setter Property="DropDownButtonStyle" Value="{StaticResource InputDropDownButtonStyle}" />
        <Setter Property="DropDownBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="DropDownBorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="DropDownCornerRadius" Value="0" />
        <Setter Property="DropDownBorderThickness" Value="1" />
        <Setter Property="HighlightTextColor" Value="{DynamicResource RadPrimaryColor}" />
        <!-- EXCEPTION: -->
        <!-- <Setter Property="ItemTemplate" Value="{StaticResource ComboBoxDropDownItemTemplate}" /> -->
        <!-- <Setter Property="SelectedItemTemplate" Value="{StaticResource ComboBoxSelectedDropDownItemTemplate}" /> -->
        <!-- <Setter Property="TokenTemplate" Value="{StaticResource InputTokenTemplate}" /> -->
        <!-- <Setter Property="ShowMoreTemplate" Value="{StaticResource InputShowMoreTemplate}" /> -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}" />

    <Style x:Key="RadOutlineComboBoxStyle" TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's are both 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="FocusedBorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="DropDownButtonStyle" Value="{StaticResource OutlineInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadFlatComboBoxStyle" TargetType="telerik:RadComboBox" BasedOn="{StaticResource RadComboBoxStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="DropDownButtonStyle" Value="{StaticResource FlatInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!-- BUG: [iOS] Does not apply at all -->
                <!-- <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup> -->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="PickerDisplayLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="PickerPlaceholderLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="PickerClearButtonStyle" TargetType="Button">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Text" Value="&#xe84e;" />
        <!-- TODO: Kendo's is 50% default text color -->
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0, 0, 4, 0" />
        <Setter Property="WidthRequest" Value="20" />
        <Setter Property="HeightRequest" Value="20" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Center" />
        <!-- TODO: Ask Kendo designers what should the VisualStates of this button be -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="PickerSpinnerHeaderStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
    </Style>

    <Style x:Key="PickerSpinnerSeparatorStyle" TargetType="telerik:RadBorder">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="PickerSpinnerHeaderSeparatorStyle" TargetType="telerik:RadBorder" BasedOn="{StaticResource PickerSpinnerSeparatorStyle}" />

    <Style x:Key="PickerSpinnerItemStyle" TargetType="telerik:SpinnerItemView">
        <!-- Kendo's is a linear gradient overlay that fades the non-active items -->
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
    </Style>

    <Style x:Key="PickerSpinnerSelectedItemStyle" TargetType="telerik:SpinnerItemView">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
    </Style>

    <Style x:Key="PickerSpinnerStyle" TargetType="telerik:RadSpinner">
        <Setter Property="ItemStyle" Value="{StaticResource PickerSpinnerItemStyle}" />
        <Setter Property="SelectedItemStyle" Value="{StaticResource PickerSpinnerSelectedItemStyle}" />
    </Style>

    <Style x:Key="PickerSpinnerSelectionHighlightStyle" TargetType="telerik:RadBorder">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <!-- Kendo's is achieved with two shadows -->
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 1" />
    </Style>

    <Style x:Key="PickerViewStyle" TargetType="telerik:PickerContentView">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Shadow" Value="{StaticResource PopupShadow}" />
    </Style>

    <Style x:Key="PickerViewCancelButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="PickerViewAcceptButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadPrimaryButtonStyle}">
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="PickerViewHeaderLabelStyle" TargetType="Label">
        <!-- TODO: Adjust font size with designers -->
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Margin" Value="8" />
    </Style>

    <Style x:Key="PickerViewHeaderStyle" TargetType="telerik:PickerContentView">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HeightRequest" Value="46" />
    </Style>

    <ControlTemplate x:Key="PickerViewFooterTemplate">
        <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                           BorderColor="{TemplateBinding BorderColor}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Padding="8">
            <Grid ColumnDefinitions="*, *"
                  ColumnSpacing="4">
                <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                   Text="{TemplateBinding CancelButtonText}"
                                   Style="{TemplateBinding CancelButtonStyle}"
                                   Command="{TemplateBinding CancelCommand}"
                                   AutomationId="PickerPopupCancelButton" />
                <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                   Text="{TemplateBinding AcceptButtonText}"
                                   Style="{TemplateBinding AcceptButtonStyle}"
                                   Command="{TemplateBinding AcceptCommand}"
                                   AutomationId="PickerPopupOkButton" />
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>

    <Style x:Key="PickerViewFooterStyle" TargetType="telerik:PickerContentView">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HeightRequest" Value="46" />
    </Style>

    <Style x:Key="PickerBaseStyle" TargetType="telerik:RadPickerBase">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="DisplayLabelStyle" Value="{StaticResource PickerDisplayLabelStyle}" />
        <Setter Property="PlaceholderLabelStyle" Value="{StaticResource PickerPlaceholderLabelStyle}" />
        <Setter Property="ClearButtonStyle" Value="{StaticResource PickerClearButtonStyle}" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource InputDropDownButtonStyle}" />
        <Setter Property="DropDownSettings">
            <telerik:PickerDropDownSettings DropDownViewStyle="{StaticResource PickerViewStyle}"
                                            FooterStyle="{StaticResource PickerViewFooterStyle}"
                                            FooterTemplate="{StaticResource PickerViewFooterTemplate}"
                                            CancelButtonStyle="{StaticResource PickerViewCancelButtonStyle}"
                                            AcceptButtonStyle="{StaticResource PickerViewAcceptButtonStyle}"
                                            AcceptButtonText="Set" />
        </Setter>
        <Setter Property="PopupSettings">
            <!-- TODO: Ask designers for PopupOutsideBackgroundColor -->
            <!-- TODO: Discuss shadows - currently the popup view's template has shadow to the root Border -->
            <telerik:PickerPopupSettings PopupViewStyle="{StaticResource PickerViewStyle}"
                                         HeaderLabelStyle="{StaticResource PickerViewHeaderLabelStyle}"
                                         HeaderStyle="{StaticResource PickerViewHeaderStyle}"
                                         FooterStyle="{StaticResource PickerViewFooterStyle}"
                                         FooterTemplate="{StaticResource PickerViewFooterTemplate}"
                                         CancelButtonStyle="{StaticResource PickerViewCancelButtonStyle}"
                                         AcceptButtonStyle="{StaticResource PickerViewAcceptButtonStyle}"
                                         AcceptButtonText="Set" />
        </Setter>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="OutlinePickerBaseStyle" TargetType="telerik:RadPickerBase" BasedOn="{StaticResource PickerBaseStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's are both 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource OutlineInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="FlatPickerBaseStyle" TargetType="telerik:RadPickerBase" BasedOn="{StaticResource PickerBaseStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource FlatInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    --><!-- BUG: [iOS] Does not apply at all --><!--
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadTemplatedPickerStyle" TargetType="telerik:RadTemplatedPicker" BasedOn="{StaticResource PickerBaseStyle}" />
    <Style TargetType="telerik:RadTemplatedPicker" BasedOn="{StaticResource RadTemplatedPickerStyle}" />

    <Style x:Key="RadOutlineTemplatedPickerStyle" TargetType="telerik:RadTemplatedPicker" BasedOn="{StaticResource OutlinePickerBaseStyle}" />
    <Style x:Key="RadFlatTemplatedPickerStyle" TargetType="telerik:RadTemplatedPicker" BasedOn="{StaticResource FlatPickerBaseStyle}" />

    <Style x:Key="RadListPickerStyle" TargetType="telerik:RadListPicker" BasedOn="{StaticResource PickerBaseStyle}">
        <!-- BUG: [Android, iOS] Not applied.
                  Only ItemStyle and SelectedItemStyle apply when set directly to a ListPicker instance.
                  ItemStyle and SelectedItemStyle of SpinnerStyle do not apply. -->
        <Setter Property="SpinnerStyle" Value="{StaticResource PickerSpinnerStyle}" />
        <!-- BUG: [iOS] Not applied. -->
        <Setter Property="SelectionHighlightStyle" Value="{StaticResource PickerSpinnerSelectionHighlightStyle}" />
    </Style>
    <Style TargetType="telerik:RadListPicker" BasedOn="{StaticResource RadListPickerStyle}" />

    <Style x:Key="RadOutlineListPickerStyle" TargetType="telerik:RadListPicker" BasedOn="{StaticResource OutlinePickerBaseStyle}" />
    <Style x:Key="RadFlatListPickerStyle" TargetType="telerik:RadListPicker" BasedOn="{StaticResource FlatPickerBaseStyle}" />

    <Style x:Key="MultiSpinnerPickerBaseStyle" TargetType="telerik:RadMultiSpinnerPickerBase" BasedOn="{StaticResource PickerBaseStyle}">
        <Setter Property="SpinnerHeaderStyle" Value="{StaticResource PickerSpinnerHeaderStyle}" />
        <Setter Property="SpinnerHeaderSeparatorStyle" Value="{StaticResource PickerSpinnerHeaderSeparatorStyle}" />
        <Setter Property="SpinnerSeparatorStyle" Value="{StaticResource PickerSpinnerSeparatorStyle}" />
        <Setter Property="SpinnerStyle" Value="{StaticResource PickerSpinnerStyle}" />
        <Setter Property="SelectionHighlightStyle" Value="{StaticResource PickerSpinnerSelectionHighlightStyle}" />
    </Style>

    <Style x:Key="OutlineMultiSpinnerPickerBaseStyle" TargetType="telerik:RadMultiSpinnerPickerBase" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's are both 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource OutlineInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="FlatMultiSpinnerPickerBaseStyle" TargetType="telerik:RadMultiSpinnerPickerBase" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="ToggleButtonStyle" Value="{StaticResource FlatInputDropDownButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <!--<VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    --><!-- BUG: [iOS] Does not apply at all --><!--
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>-->
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="MultiSpinnerPickerTabStripStyle" TargetType="telerik:TabViewHeader">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <!-- BUG: The bottom margin does not seem to apply at all -->
        <Setter Property="Margin" Value="8" />
    </Style>

    <Style x:Key="MultiSpinnerPickerTabStripItemStyle" TargetType="telerik:TabViewHeaderItem">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="ContentPadding" Value="8, 4" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadDatePickerStyle" TargetType="telerik:RadDatePicker" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}" />
    <Style TargetType="telerik:RadDatePicker" BasedOn="{StaticResource RadDatePickerStyle}" />

    <Style x:Key="RadOutlineDatePickerStyle" TargetType="telerik:RadDatePicker" BasedOn="{StaticResource OutlineMultiSpinnerPickerBaseStyle}" />
    <Style x:Key="RadFlatDatePickerStyle" TargetType="telerik:RadDatePicker" BasedOn="{StaticResource FlatMultiSpinnerPickerBaseStyle}" />

    <Style x:Key="RadTimePickerStyle" TargetType="telerik:RadTimePicker" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}" />
    <Style TargetType="telerik:RadTimePicker" BasedOn="{StaticResource RadTimePickerStyle}" />

    <Style x:Key="RadOutlineTimePickerStyle" TargetType="telerik:RadTimePicker" BasedOn="{StaticResource OutlineMultiSpinnerPickerBaseStyle}" />
    <Style x:Key="RadFlatTimePickerStyle" TargetType="telerik:RadTimePicker" BasedOn="{StaticResource FlatMultiSpinnerPickerBaseStyle}" />

    <Style x:Key="RadTimeSpanPickerStyle" TargetType="telerik:RadTimeSpanPicker" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}" />
    <Style TargetType="telerik:RadTimeSpanPicker" BasedOn="{StaticResource RadTimeSpanPickerStyle}" />

    <Style x:Key="RadOutlineTimeSpanPickerStyle" TargetType="telerik:RadTimeSpanPicker" BasedOn="{StaticResource OutlineMultiSpinnerPickerBaseStyle}" />
    <Style x:Key="RadFlatTimeSpanPickerStyle" TargetType="telerik:RadTimeSpanPicker" BasedOn="{StaticResource FlatMultiSpinnerPickerBaseStyle}" />

    <Style x:Key="RadDateTimePickerStyle" TargetType="telerik:RadDateTimePicker" BasedOn="{StaticResource MultiSpinnerPickerBaseStyle}">
        <Setter Property="TabStripStyle" Value="{StaticResource MultiSpinnerPickerTabStripStyle}" />
        <Setter Property="TabStripItemStyle" Value="{StaticResource MultiSpinnerPickerTabStripItemStyle}" />
    </Style>
    <Style TargetType="telerik:RadDateTimePicker" BasedOn="{StaticResource RadDateTimePickerStyle}" />

    <Style x:Key="RadOutlineDateTimePickerStyle" TargetType="telerik:RadDateTimePicker" BasedOn="{StaticResource OutlineMultiSpinnerPickerBaseStyle}">
        <Setter Property="TabStripStyle" Value="{StaticResource MultiSpinnerPickerTabStripStyle}" />
        <Setter Property="TabStripItemStyle" Value="{StaticResource MultiSpinnerPickerTabStripItemStyle}" />
    </Style>
    <Style x:Key="RadFlatDateTimePickerStyle" TargetType="telerik:RadDateTimePicker" BasedOn="{StaticResource FlatMultiSpinnerPickerBaseStyle}">
        <Setter Property="TabStripStyle" Value="{StaticResource MultiSpinnerPickerTabStripStyle}" />
        <Setter Property="TabStripItemStyle" Value="{StaticResource MultiSpinnerPickerTabStripItemStyle}" />
    </Style>

    <Style x:Key="RadSignaturePadStyle" TargetType="telerik:RadSignaturePad">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="StrokeColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <!-- BUG: [iOS] Does not apply at all -->
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadSignaturePad" BasedOn="{StaticResource RadSignaturePadStyle}" />

    <Style x:Key="RadOutlineSignaturePadStyle" TargetType="telerik:RadSignaturePad" BasedOn="{StaticResource RadSignaturePadStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <!-- TODO: Kendo's is 50% text color -->
        <Setter Property="BorderBrush" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <!-- TODO: Kendo's is 80% text color -->
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <!-- BUG: [iOS] Does not apply at all -->
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadFlatSignaturePadStyle" TargetType="telerik:RadSignaturePad" BasedOn="{StaticResource RadSignaturePadStyle}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="4, 4, 0, 0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BorderBrush" Value="{DynamicResource RadBorderAltColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <!-- BUG: [iOS] Does not apply at all -->
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- BUG: No disabled state support, though it looks like it is disabled -->
    <Style x:Key="RadRatingStyle" TargetType="telerik:RadShapeRating">
        <Setter Property="ItemFill" Value="Transparent" />
        <Setter Property="ItemStroke" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="ItemStrokeThickness" Value="2" />
        <Setter Property="SelectedItemFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="SelectedItemStroke" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="SelectedItemStrokeThickness" Value="2" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadShapeRating" BasedOn="{StaticResource RadRatingStyle}" />

    <Style x:Key="RadLinearProgressBarStyle" TargetType="telerik:RadLinearProgressBar">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="AlternateTextColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <Setter Property="TrackFill" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="ProgressFill" Value="{DynamicResource RadPrimaryColor}" />
        <!-- This is a bit hacky as if the app background is a different one, the result will not be pretty -->
        <Setter Property="SegmentSeparatorFill" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="SegmentSeparatorThickness" Value="3" />
        <Setter Property="TrackCornerRadius" Value="0" />
        <Setter Property="ProgressCornerRadius" Value="0" />
        <Setter Property="MinimumHeightRequest" Value="22" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadLinearProgressBar" BasedOn="{StaticResource RadLinearProgressBarStyle}" />

    <ControlTemplate x:Key="SliderThumbControlTemplate">
        <Ellipse WidthRequest="16"
                 HeightRequest="16"
                 HorizontalOptions="Center"
                 VerticalOptions="Center"
                 Fill="{TemplateBinding Fill}"
                 Stroke="{TemplateBinding Stroke}"
                 StrokeThickness="{TemplateBinding StrokeThickness}" />
    </ControlTemplate>

    <Style x:Key="SliderThumbStyle" TargetType="telerik:SliderThumb">
        <Setter Property="ControlTemplate" Value="{StaticResource SliderThumbControlTemplate}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="Shadow" Value="{x:Null}" />
    </Style>

    <DataTemplate x:Key="SliderTooltipContentTemplate">
        <Label Text="{Binding FormattedValue}"
               TextColor="{DynamicResource RadAppSurfaceColor}"
               FontSize="14" />
    </DataTemplate>

    <ControlTemplate x:Key="SliderTooltipControlTemplate">
        <Grid RowDefinitions="*, Auto">
            <!-- TODO: Fill should be 75% black -->
            <Path x:Name="TooltipArrow"
                  Grid.Row="1"
                  Data="M6 6L-4.2e-07 -9.5e-08L12 9.5e-07L6 6Z"
                  Fill="{DynamicResource RadOnAppSurfaceColor}"
                  StrokeThickness="0"
                  WidthRequest="12"
                  HeightRequest="6"
                  HorizontalOptions="Center"
                  VerticalOptions="Start" />
            <!-- TODO: BackgroundColor should be 75% black -->
            <telerik:RadBorder BackgroundColor="{DynamicResource RadOnAppSurfaceColor}"
                               CornerRadius="2"
                               Padding="8, 4">
                <ContentPresenter />
            </telerik:RadBorder>
        </Grid>
    </ControlTemplate>

    <Style x:Key="RadSliderStyle" TargetType="telerik:RadSlider">
        <Setter Property="BackTrackThickness" Value="4" />
        <Setter Property="TickThickness" Value="1" />
        <Setter Property="TickLength" Value="6" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackTrackColor" Value="{DynamicResource RadBorderAltColor}" />
        <Setter Property="RangeTrackFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="ThumbFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="InRangeTickColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="OutOfRangeTickColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="ThumbStyle" Value="{StaticResource SliderThumbStyle}" />
        <!-- This is needed since there is no way to specify ContentPresenter's TextColor for Maui -->
        <Setter Property="TooltipContentTemplate" Value="{StaticResource SliderTooltipContentTemplate}" />
        <Setter Property="TooltipControlTemplate" Value="{StaticResource SliderTooltipControlTemplate}" />
        <!-- BUG: No disabled state support -->
        <!-- EXCEPTION: Caused by setting IsEnabled property to False and having these VisualStates -->
        <!-- <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter> -->
    </Style>
    <Style TargetType="telerik:RadSlider" BasedOn="{StaticResource RadSliderStyle}" />

    <Style x:Key="RadRangeSliderStyle" TargetType="telerik:RadRangeSlider">
        <Setter Property="BackTrackThickness" Value="4" />
        <Setter Property="TickThickness" Value="1" />
        <Setter Property="TickLength" Value="6" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackTrackColor" Value="{DynamicResource RadBorderAltColor}" />
        <Setter Property="RangeTrackFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="StartThumbFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="EndThumbFill" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="InRangeTickColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="OutOfRangeTickColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="StartThumbStyle" Value="{StaticResource SliderThumbStyle}" />
        <Setter Property="EndThumbStyle" Value="{StaticResource SliderThumbStyle}" />
        <!-- This is needed since there is no way to specify ContentPresenter's TextColor for Maui -->
        <Setter Property="TooltipContentTemplate" Value="{StaticResource SliderTooltipContentTemplate}" />
        <Setter Property="TooltipControlTemplate" Value="{StaticResource SliderTooltipControlTemplate}" />
        <!-- BUG: No disabled state support -->
        <!-- EXCEPTION: Caused by setting IsEnabled property to False and having these VisualStates -->
        <!-- <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter> -->
    </Style>
    <Style TargetType="telerik:RadRangeSlider" BasedOn="{StaticResource RadRangeSliderStyle}" />

    <ControlTemplate x:Key="SlideViewControlTemplate">
        <Grid BackgroundColor="Transparent"
              IsClippedToBounds="True">
            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Horizontal">
                    <Setter Property="RowDefinitions" Value="Auto, *, Auto" />
                </DataTrigger>
                <DataTrigger TargetType="Grid" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Vertical">
                    <Setter Property="ColumnDefinitions" Value="Auto, *, Auto" />
                </DataTrigger>
            </Grid.Triggers>
            <telerik:SlideViewContent x:Name="PART_SlideViewContent"
                                      Items="{Binding Items, Source={RelativeSource Mode=TemplatedParent}}"
                                      Spacing="{Binding Spacing, Source={RelativeSource Mode=TemplatedParent}}"
                                      HasLooping="{Binding HasLooping, Source={RelativeSource Mode=TemplatedParent}}"
                                      Orientation="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}">
                <telerik:SlideViewContent.Triggers>
                    <DataTrigger TargetType="telerik:SlideViewContent" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Horizontal">
                        <Setter Property="Grid.Row" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="telerik:SlideViewContent" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Vertical">
                        <Setter Property="Grid.Column" Value="1" />
                    </DataTrigger>
                </telerik:SlideViewContent.Triggers>
            </telerik:SlideViewContent>
            <StackLayout BackgroundColor="Transparent"
                         MinimumWidthRequest="64"
                         MinimumHeightRequest="64">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Horizontal">
                        <Setter Property="HorizontalOptions" Value="Start" />
                        <Setter Property="VerticalOptions" Value="Center" />
                        <Setter Property="Grid.Row" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Vertical">
                        <Setter Property="HorizontalOptions" Value="Center" />
                        <Setter Property="VerticalOptions" Value="Start" />
                        <Setter Property="Grid.Column" Value="1" />
                    </DataTrigger>
                </StackLayout.Triggers>
                <View.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding NavigateToPreviousItemCommand, Source={RelativeSource Mode=TemplatedParent}}" />
                </View.GestureRecognizers>
                <telerik:RadButton Command="{Binding NavigateToPreviousItemCommand, Source={RelativeSource Mode=TemplatedParent}}"
                                   Style="{Binding ActualNavigateToPreviousItemButtonStyle, Source={RelativeSource Mode=TemplatedParent}}" 
                                   AutomationId="NavigateToPreviousItem" />
            </StackLayout>
            <StackLayout BackgroundColor="Transparent"
                         MinimumWidthRequest="64"
                         MinimumHeightRequest="64">
                <StackLayout.Triggers>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Horizontal">
                        <Setter Property="HorizontalOptions" Value="End" />
                        <Setter Property="VerticalOptions" Value="Center" />
                        <Setter Property="Grid.Row" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="StackLayout" Binding="{Binding Orientation, Source={RelativeSource Mode=TemplatedParent}}" Value="Vertical">
                        <Setter Property="HorizontalOptions" Value="Center" />
                        <Setter Property="VerticalOptions" Value="End" />
                        <Setter Property="Grid.Column" Value="1" />
                    </DataTrigger>
                </StackLayout.Triggers>
                <View.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding NavigateToNextItemCommand, Source={RelativeSource Mode=TemplatedParent}}" />
                </View.GestureRecognizers>
                <telerik:RadButton Command="{Binding NavigateToNextItemCommand, Source={RelativeSource Mode=TemplatedParent}}"
                                   Style="{Binding ActualNavigateToNextItemButtonStyle, Source={RelativeSource Mode=TemplatedParent}}" 
                                   AutomationId="NavigateToNextItem" />
            </StackLayout>
            <telerik:SlideViewIndicator ItemsSource="{Binding IndicatorItemsSource, Source={RelativeSource Mode=TemplatedParent}}"
                                        CurrentIndex="{Binding CurrentIndex, Source={RelativeSource Mode=TemplatedParent}}"
                                        HasLooping="{Binding HasLooping, Source={RelativeSource Mode=TemplatedParent}}"
                                        Style="{Binding ActualIndicatorStyle, Source={RelativeSource Mode=TemplatedParent}}"
                                        IsEnabled="{Binding IsEnabled, Source={RelativeSource Mode=TemplatedParent}}"
                                        AutomationId="SlideViewIndicator" />
        </Grid>
    </ControlTemplate>

    <!-- TODO: Discuss how to achieve Kendo's shadow - it looks like text shadow -->
    <Style x:Key="SlideViewNavigationButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="telerik:ButtonUtils.Visibility" Value="{Binding NavigationButtonsVisibility, Source={RelativeSource Mode=TemplatedParent}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="SlideViewNavigateToPreviousItemButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource SlideViewNavigationButtonStyle}">
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconLeftArrow}" />
    </Style>

    <Style x:Key="SlideViewNavigateToNextItemButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource SlideViewNavigationButtonStyle}">
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconRightArrow}" />
    </Style>

    <Style x:Key="SlideViewVerticalNavigateToPreviousItemButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource SlideViewNavigationButtonStyle}">
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconUpArrow}" />
    </Style>

    <Style x:Key="SlideViewVerticalNavigateToNextItemButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource SlideViewNavigationButtonStyle}">
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconDownArrow}" />
    </Style>

    <ControlTemplate x:Key="SlideViewIndicatorItemControlTemplate">
        <Grid WidthRequest="20" HeightRequest="20">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <VisualState.Setters>
                            <Setter TargetName="ellipse" Property="Ellipse.WidthRequest" Value="12" />
                            <Setter TargetName="ellipse" Property="Ellipse.HeightRequest" Value="12" />
                            <Setter TargetName="ellipse" Property="Ellipse.StrokeThickness" Value="2" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter TargetName="ellipse" Property="Ellipse.Fill" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="SelectedMouseOver">
                        <VisualState.Setters> 
                            <Setter TargetName="ellipse" Property="Ellipse.Fill" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter TargetName="ellipse" Property="Ellipse.WidthRequest" Value="12" />
                            <Setter TargetName="ellipse" Property="Ellipse.HeightRequest" Value="12" />
                            <Setter TargetName="ellipse" Property="Ellipse.StrokeThickness" Value="2" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter TargetName="ellipse" Property="Opacity" Value="0.6" />
                            <Setter TargetName="ellipse" Property="Ellipse.StrokeThickness" Value="0" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!-- TODO: Stroke should be 13% black when hovered/selected+hovered -->
            <Ellipse x:Name="ellipse"
                     WidthRequest="10"
                     HeightRequest="10"
                     HorizontalOptions="Center"
                     VerticalOptions="Center"
                     Fill="{DynamicResource RadBaseColor}"
                     Stroke="{DynamicResource RadBorderAltColor}"
                     StrokeThickness="0" />
        </Grid>
    </ControlTemplate>

    <Style TargetType="telerik:SlideViewIndicatorItem">
        <Setter Property="ControlTemplate" Value="{StaticResource SlideViewIndicatorItemControlTemplate}" />
    </Style>

    <!-- BUG: [iOS] Overriding ControlTemplate leads to the items being lost -->
    <!-- TODO: Expose an easy way to style the navigation buttons of SlideViewIndicator -->
    <Style x:Key="RadSlideViewStyle" TargetType="telerik:RadSlideView">
        <Setter Property="NavigateToPreviousItemButtonStyle" Value="{StaticResource SlideViewNavigateToPreviousItemButtonStyle}" />
        <Setter Property="NavigateToNextItemButtonStyle" Value="{StaticResource SlideViewNavigateToNextItemButtonStyle}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal">
                        <VisualState.Setters>
                            <Setter Property="NavigateToPreviousItemButtonStyle" Value="{StaticResource SlideViewNavigateToPreviousItemButtonStyle}" />
                            <Setter Property="NavigateToNextItemButtonStyle" Value="{StaticResource SlideViewNavigateToNextItemButtonStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Vertical">
                        <VisualState.Setters>
                            <Setter Property="NavigateToPreviousItemButtonStyle" Value="{StaticResource SlideViewVerticalNavigateToPreviousItemButtonStyle}" />
                            <Setter Property="NavigateToNextItemButtonStyle" Value="{StaticResource SlideViewVerticalNavigateToNextItemButtonStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadSlideView" BasedOn="{StaticResource RadSlideViewStyle}" />

    <!-- TODO: Discuss with designers the desired text color and expose a way to override it -->
    <Style x:Key="AccordionItemHeaderStyle" TargetType="telerik:AccordionItemHeader">
        <Setter Property="IndicatorColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:AccordionItemHeader" BasedOn="{StaticResource AccordionItemHeaderStyle}" />

    <!-- TODO: Expose ItemHeaderStyle or similar -->
    <!-- TODO: Should we have non-transparent default bg color? Also, we don't have border color support -->
    <Style x:Key="RadAccordionStyle" TargetType="telerik:RadAccordion">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>
    <Style TargetType="telerik:RadAccordion" BasedOn="{StaticResource RadAccordionStyle}" />

    <!-- TODO: Discuss with designers the desired text color and expose a way to override it -->
    <Style x:Key="ExpanderHeaderStyle" TargetType="telerik:ExpanderHeader">
        <Setter Property="IndicatorColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:ExpanderHeader" BasedOn="{StaticResource ExpanderHeaderStyle}" />

    <!-- TODO: Expose ItemHeaderStyle or similar -->
    <!-- TODO: Should we have non-transparent default bg color? Also, we don't have border color support -->
    <Style x:Key="RadExpanderStyle" TargetType="telerik:RadExpander">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>
    <Style TargetType="telerik:RadExpander" BasedOn="{StaticResource RadExpanderStyle}" />

    <telerik:ListViewItemStyle x:Key="ListViewItemStyle"
                               TextCellTextColor="{DynamicResource RadOnAppSurfaceColor}"
                               BackgroundColor="{DynamicResource RadAppSurfaceColor}"
                               BorderColor="{DynamicResource RadBorderColor}" />

    <telerik:ListViewItemStyle x:Key="PressedListViewItemStyle"
                               TextCellTextColor="{DynamicResource RadOnAppSurfaceColor}"
                               BackgroundColor="{DynamicResource RadBorderColor}"
                               BorderColor="{DynamicResource RadBorderColor}" />

    <telerik:ListViewItemStyle x:Key="SelectedListViewItemStyle"
                               TextCellTextColor="{DynamicResource RadOnPrimaryColor}"
                               BackgroundColor="{DynamicResource RadPrimaryColor}"
                               BorderColor="{DynamicResource RadPrimaryColor}" />

    <!-- TODO: Discuss desired group header style with designers -->
    <Style x:Key="RadListViewStyle" TargetType="telerik:RadListView">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="ItemStyle" Value="{StaticResource ListViewItemStyle}" />
        <Setter Property="PressedItemStyle" Value="{StaticResource PressedListViewItemStyle}" />
        <Setter Property="SelectedItemStyle" Value="{StaticResource SelectedListViewItemStyle}" />
    </Style>
    <Style TargetType="telerik:RadListView" BasedOn="{StaticResource RadListViewStyle}" />

    <Style x:Key="TreeViewItemExpandButtonStyle" TargetType="telerik:TreeViewItemExpandButton">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconEmpty}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WidthRequest" Value="16" />
        <Setter Property="HeightRequest" Value="16" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Leaf" />
                    <VisualState x:Name="Expanded">
                        <VisualState.Setters>
                            <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconDownDir}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Collapsed">
                        <VisualState.Setters>
                            <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconRightDir}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemCheckBoxStyle" TargetType="telerik:TreeViewItemCheckBox" BasedOn="{StaticResource RadCheckBoxStyle}">
        <Setter Property="IsAnimated" Value="False" />
        <!-- TODO: Width and height should be adjust according to size of item -->
        <Setter Property="WidthRequest" Value="NaN" />
        <Setter Property="HeightRequest" Value="NaN" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <ControlTemplate x:Key="TreeViewItemViewControlTemplate">
        <telerik:TreeViewItemLayout Indentation="{TemplateBinding Indentation}"
                                    Spacing="{TemplateBinding Spacing}">
            <!-- This is part of the full control template but is made internal -->
            <!-- <telerik:TreeViewItemDragHandle Style="{TemplateBinding DragHandleStyle}"
                                            TextColor="{TemplateBinding TextColor}"
                                            IsEnabled="{TemplateBinding IsEnabled}"
                                            IsVisible="{TemplateBinding IsDragHandleVisible}" /> -->
            <telerik:TreeViewItemBusyIndicator Style="{TemplateBinding BusyIndicatorStyle}"
                                               IsBusy="{TemplateBinding IsBusy}"
                                               IsVisible="{TemplateBinding IsExpandButtonVisible}">
                <telerik:TreeViewItemExpandButton Style="{TemplateBinding ExpandButtonStyle}"
                                                  Command="{TemplateBinding ToggleExpandedCommand}"
                                                  IsExpanded="{TemplateBinding IsExpanded}"
                                                  IsLeaf="{TemplateBinding IsLeaf}"
                                                  IsEnabled="{TemplateBinding IsEnabled}" />
            </telerik:TreeViewItemBusyIndicator>
            <telerik:TreeViewItemCheckBox Style="{TemplateBinding CheckBoxStyle}"
                                          IsChecked="{TemplateBinding IsChecked}"
                                          IsEnabled="{TemplateBinding IsEnabled}"
                                          IsVisible="{TemplateBinding IsCheckBoxVisible}" />
            <telerik:TreeViewItemImage Source="{TemplateBinding ImageSource}"
                                       Style="{TemplateBinding ImageStyle}"
                                       IsEnabled="{TemplateBinding IsEnabled}"
                                       IsVisible="{TemplateBinding IsImageVisible}" />
            <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                               BorderColor="{TemplateBinding BorderColor}"
                               BorderBrush="{TemplateBinding BorderBrush}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{TemplateBinding CornerRadius}"
                               Padding="{TemplateBinding ContentPadding}">
                <ContentPresenter />
            </telerik:RadBorder>
            <!-- This is part of the full control template but is made internal -->
            <!-- <telerik:TreeViewItemContextMenuButton Style="{TemplateBinding ContextMenuButtonStyle}"
                                                   TextColor="{TemplateBinding TextColor}"
                                                   IsEnabled="{TemplateBinding IsEnabled}"
                                                   IsVisible="{TemplateBinding IsContextMenuButtonVisible}" /> -->
        </telerik:TreeViewItemLayout>
    </ControlTemplate>

    <Style x:Key="TreeViewItemViewStyle" TargetType="telerik:TreeViewItemView">
        <!-- TODO: The minimum height should be dynamic based on Kendo theme's sizes -->
        <Setter Property="MinimumHeightRequest" Value="24" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Spacing" Value="4" />
        <Setter Property="ContentPadding" Value="8, 0" />
        <Setter Property="ExpandButtonStyle" Value="{StaticResource TreeViewItemExpandButtonStyle}" />
        <Setter Property="CheckBoxStyle" Value="{StaticResource TreeViewItemCheckBoxStyle}" />
        <Setter Property="ControlTemplate" Value="{StaticResource TreeViewItemViewControlTemplate}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBorderColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="RadTreeViewStyle" TargetType="telerik:RadTreeView">
        <Setter Property="ItemStyle" Value="{StaticResource TreeViewItemViewStyle}" />
        <Setter Property="LevelIndentation" Value="32" />
    </Style>
    <Style TargetType="telerik:RadTreeView" BasedOn="{StaticResource RadTreeViewStyle}" />

    <Style x:Key="NavigationViewPaneHeaderStyle" TargetType="telerik:NavigationViewPaneHeader">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="ContentPadding" Value="0" />
    </Style>

    <Style x:Key="NavigationViewPaneFooterStyle" TargetType="telerik:NavigationViewPaneFooter">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ContentPadding" Value="0" />
    </Style>

    <Style x:Key="NavigationViewPaneStyle" TargetType="telerik:NavigationViewPane">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="ContentPadding" Value="0" />
        <Setter Property="HeaderStyle" Value="{StaticResource NavigationViewPaneHeaderStyle}" />
        <Setter Property="FooterStyle" Value="{StaticResource NavigationViewPaneFooterStyle}" />
    </Style>

    <Style x:Key="NavigationViewToggleButtonStyle" TargetType="telerik:NavigationViewToggleButton">
        <Setter Property="MinimumWidthRequest" Value="48" />
        <Setter Property="MinimumHeightRequest" Value="40" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="Text" Value="{x:Static telerikMaui:TelerikFont.IconMenu}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="Button.BackgroundColor" Value="{DynamicResource RadBorderColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Toggled">
                        <VisualState.Setters>
                            <Setter Property="Button.BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="Button.TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Button.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewHeaderStyle" TargetType="telerik:NavigationViewHeader">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="HeightRequest" Value="36" />
        <Setter Property="HeaderButtonStyle" Value="{StaticResource NavigationViewToggleButtonStyle}" />
    </Style>

    <Style x:Key="NavigationViewItemViewStyle" TargetType="telerik:NavigationViewItemView">
        <Setter Property="MinimumWidthRequest" Value="48" />
        <Setter Property="MinimumHeightRequest" Value="40" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="ContentPadding" Value="8, 0" />
        <Setter Property="Spacing" Value="0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="telerik:NavigationViewItemView.BackgroundColor" Value="{DynamicResource RadBorderColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:NavigationViewItemView.BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="telerik:NavigationViewItemView.TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="telerik:NavigationViewItemView.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <!-- WORKAROUND: Reveals a BUG with multiple items looking like selected while only one actually is -->
    <Style TargetType="telerik:NavigationViewItemView" BasedOn="{StaticResource NavigationViewItemViewStyle}" />

    <!-- TODO: There are some hardcoded paddings in the control templates - should discuss them -->
    <Style x:Key="RadNavigationViewStyle" TargetType="telerik:RadNavigationView">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="PaneStyle" Value="{StaticResource NavigationViewPaneStyle}" />
        <Setter Property="HeaderStyle" Value="{StaticResource NavigationViewHeaderStyle}" />
        <!-- BUG: Does not apply -->
        <!-- <Setter Property="ItemStyle" Value="{StaticResource NavigationViewItemViewStyle}" /> -->
    </Style>
    <Style TargetType="telerik:RadNavigationView" BasedOn="{StaticResource RadNavigationViewStyle}" />

    <ControlTemplate x:Key="TabViewHeaderControlTemplate">
        <Grid>
            <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                               BorderColor="{TemplateBinding BorderColor}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{TemplateBinding CornerRadius}" />
            <ContentPresenter Padding="{TemplateBinding ContentPadding}"
                              Content="{TemplateBinding Content}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="TabViewHeaderStyle" TargetType="telerik:TabViewHeader">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Fill" />
    </Style>

    <Style x:Key="TabViewBottomHeaderStyle" TargetType="telerik:TabViewHeader" BasedOn="{StaticResource TabViewHeaderStyle}">
        <Setter Property="BorderThickness" Value="0, 1, 0, 0" />
    </Style>

    <Style x:Key="TabViewLeftHeaderStyle" TargetType="telerik:TabViewHeader" BasedOn="{StaticResource TabViewHeaderStyle}">
        <Setter Property="BorderThickness" Value="0, 0, 1, 0" />
    </Style>

    <Style x:Key="TabViewRightHeaderStyle" TargetType="telerik:TabViewHeader" BasedOn="{StaticResource TabViewHeaderStyle}">
        <Setter Property="BorderThickness" Value="1, 0, 0, 0" />
    </Style>

    <ControlTemplate x:Key="TabViewHeaderItemControlTemplate">
        <Grid>
            <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                               BorderColor="{TemplateBinding BorderColor}"
                               BorderThickness="{TemplateBinding BorderThickness}"
                               CornerRadius="{TemplateBinding CornerRadius}"
                               Padding="{TemplateBinding ContentPadding}"
                               Content="{TemplateBinding Content}" />
            <BoxView IsVisible="{Binding IsSelected, Source={RelativeSource Mode=TemplatedParent}}"
                     BackgroundColor="{TemplateBinding BackgroundColor}"
                     HorizontalOptions="Fill"
                     VerticalOptions="Fill">
                <BoxView.Triggers>
                    <DataTrigger TargetType="BoxView" Binding="{Binding Position, Source={RelativeSource Mode=TemplatedParent}}" Value="Top">
                        <Setter Property="VerticalOptions" Value="End" />
                        <Setter Property="HeightRequest" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="BoxView" Binding="{Binding Position, Source={RelativeSource Mode=TemplatedParent}}" Value="Bottom">
                        <Setter Property="VerticalOptions" Value="Start" />
                        <Setter Property="HeightRequest" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="BoxView" Binding="{Binding Position, Source={RelativeSource Mode=TemplatedParent}}" Value="Left">
                        <Setter Property="HorizontalOptions" Value="End" />
                        <Setter Property="WidthRequest" Value="1" />
                    </DataTrigger>
                    <DataTrigger TargetType="BoxView" Binding="{Binding Position, Source={RelativeSource Mode=TemplatedParent}}" Value="Right">
                        <Setter Property="HorizontalOptions" Value="Start" />
                        <Setter Property="WidthRequest" Value="1" />
                    </DataTrigger>
                </BoxView.Triggers>
            </BoxView>
        </Grid>
    </ControlTemplate>

    <Style x:Key="TabViewHeaderItemStyle" TargetType="telerik:TabViewHeaderItem">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="2, 2, 0, 0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.TextColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderColor" Value="{DynamicResource RadBorderColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderThickness" Value="1, 1, 1, 0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="TabViewBottomHeaderItemStyle" TargetType="telerik:TabViewHeaderItem" BasedOn="{StaticResource TabViewHeaderItemStyle}">
        <Setter Property="CornerRadius" Value="0, 0, 2, 2" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.TextColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderColor" Value="{DynamicResource RadBorderColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderThickness" Value="1, 0, 1, 1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="TabViewLeftHeaderItemStyle" TargetType="telerik:TabViewHeaderItem" BasedOn="{StaticResource TabViewHeaderItemStyle}">
        <Setter Property="CornerRadius" Value="2, 0, 0, 2" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.TextColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderColor" Value="{DynamicResource RadBorderColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderThickness" Value="1, 1, 0, 1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="TabViewRightHeaderItemStyle" TargetType="telerik:TabViewHeaderItem" BasedOn="{StaticResource TabViewHeaderItemStyle}">
        <Setter Property="CornerRadius" Value="0, 2, 2, 0" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.TextColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderColor" Value="{DynamicResource RadBorderColor}" />
                            <Setter Property="telerik:TabViewHeaderItem.BorderThickness" Value="0, 1, 1, 1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="telerik:TabViewHeaderItem.Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="TabViewContentAtBottomStyle" TargetType="telerik:TabViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1, 0, 1, 1" />
        <Setter Property="CornerRadius" Value="0, 0, 2, 2" />
    </Style>

    <Style x:Key="TabViewContentAtTopStyle" TargetType="telerik:TabViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1, 1, 1, 0" />
        <Setter Property="CornerRadius" Value="0, 2, 0, 0" />
    </Style>

    <Style x:Key="TabViewContentAtRightStyle" TargetType="telerik:TabViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 1, 1, 1" />
        <Setter Property="CornerRadius" Value="0, 2, 2, 0" />
    </Style>

    <Style x:Key="TabViewContentAtLeftStyle" TargetType="telerik:TabViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1, 1, 0, 1" />
        <Setter Property="CornerRadius" Value="2, 0, 0, 2" />
    </Style>

    <!-- TODO: Review and fix glitches when switching header position runtime -->
    <Style x:Key="RadTabViewStyle" TargetType="telerik:RadTabView">
        <!-- EXCEPTION: Cannot set any of these through style, only on instance -->
        <!-- <Setter Property="HeaderStyle" Value="{StaticResource TabViewHeaderStyle}" /> -->
        <!-- <Setter Property="HeaderTemplate" Value="{StaticResource TabViewHeaderControlTemplate}" /> -->
        <!-- <Setter Property="HeaderItemStyle" Value="{StaticResource TabViewHeaderItemStyle}" /> -->
        <!-- <Setter Property="HeaderItemTemplate" Value="{StaticResource TabViewHeaderItemControlTemplate}" /> -->
        <!-- <Setter Property="ContentStyle" Value="{StaticResource TabViewContentAtBottomStyle}" /> -->
        <!-- <Setter Property="IsHeaderOverlaid" Value="False" /> -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="HeaderPositionStates">
                    <VisualState x:Name="HeaderPositionTop">
                        <VisualState.Setters>
                            <Setter Property="HeaderStyle" Value="{DynamicResource TabViewHeaderStyle}" />
                            <Setter Property="HeaderItemStyle" Value="{DynamicResource TabViewHeaderItemStyle}" />
                            <Setter Property="ContentStyle" Value="{DynamicResource TabViewContentAtBottomStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="HeaderPositionBottom">
                        <VisualState.Setters>
                            <Setter Property="HeaderStyle" Value="{DynamicResource TabViewBottomHeaderStyle}" />
                            <Setter Property="HeaderItemStyle" Value="{DynamicResource TabViewBottomHeaderItemStyle}" />
                            <Setter Property="ContentStyle" Value="{DynamicResource TabViewContentAtTopStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="HeaderPositionLeft">
                        <VisualState.Setters>
                            <Setter Property="HeaderStyle" Value="{DynamicResource TabViewLeftHeaderStyle}" />
                            <Setter Property="HeaderItemStyle" Value="{DynamicResource TabViewLeftHeaderItemStyle}" />
                            <Setter Property="ContentStyle" Value="{DynamicResource TabViewContentAtRightStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="HeaderPositionRight">
                        <VisualState.Setters>
                            <Setter Property="HeaderStyle" Value="{DynamicResource TabViewRightHeaderStyle}" />
                            <Setter Property="HeaderItemStyle" Value="{DynamicResource TabViewRightHeaderItemStyle}" />
                            <Setter Property="ContentStyle" Value="{DynamicResource TabViewContentAtLeftStyle}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:RadTabView" BasedOn="{StaticResource RadTabViewStyle}" />

    <!-- Toolbar -->
    <!-- TODO: Figure out a way to apply different styles when orientation is vertical. -->
    <!-- TODO: Figure out a way to remove corner radiuses when items are displayed in a dropdown/popup. -->
    <!-- TODO: Figure out a way to remove spacing, borders and corner radiuses of grouped items. -->
    <!-- TODO: Start using our RadSlider as the native one requires bigger height and leads to jumping or cut-off issues. -->

    <Style x:Key="SeparatorToolbarItemViewStyle" TargetType="telerik:SeparatorToolbarItemView">
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:SeparatorToolbarItemView" BasedOn="{StaticResource SeparatorToolbarItemViewStyle}" />

    <Style x:Key="GroupToolbarItemViewStyle" TargetType="telerik:GroupToolbarItemView">
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:GroupToolbarItemView" BasedOn="{StaticResource GroupToolbarItemViewStyle}" />

    <Style x:Key="LabelToolbarItemViewStyle" TargetType="telerik:LabelToolbarItemView">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="MinimumWidthRequest" Value="30" />
        <Setter Property="MinimumHeightRequest" Value="30" />
        <Setter Property="ImageSpacing" Value="4" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:LabelToolbarItemView" BasedOn="{StaticResource LabelToolbarItemViewStyle}" />

    <Style x:Key="ButtonToolbarItemViewBaseStyle" TargetType="telerik:ButtonToolbarItemView">
        <Setter Property="MinimumWidthRequest" Value="30" />
        <Setter Property="MinimumHeightRequest" Value="30" />
        <Setter Property="ImageSpacing" Value="4" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <!-- TODO: Kendo's hover background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseHoverColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Opened" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:ButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:NavigationButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:OptionsButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />

    <Style x:Key="SelectableButtonToolbarItemViewStyle" TargetType="telerik:SelectableButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <!-- TODO: Kendo's hover background is a combination of 2 solid colors (one with alpha) and a linear gradient -->
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBaseHoverColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="SelectedDisabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>
    <Style TargetType="telerik:SelectableButtonToolbarItemView" BasedOn="{StaticResource SelectableButtonToolbarItemViewStyle}" />
    <Style TargetType="telerik:RadioButtonToolbarItemView" BasedOn="{StaticResource SelectableButtonToolbarItemViewStyle}" />
    <Style TargetType="telerik:ToggleButtonToolbarItemView" BasedOn="{StaticResource SelectableButtonToolbarItemViewStyle}" />

    <Style x:Key="DropDownButtonToolbarItemViewContentStyle" TargetType="telerik:DropDownButtonToolbarItemViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>
    <!-- WORKAROUND: -->
    <Style TargetType="telerik:DropDownButtonToolbarItemViewContent" BasedOn="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />

    <!-- BUG: Looks like disabled even if it is not -->
    <Style x:Key="DropDownButtonToolbarItemViewStyle" TargetType="telerik:DropDownButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}">
        <!--BUG: Does not apply at all.
                 If there is an implicit style for the DropDownButtonToolbarItemViewContent,
                 it applies only to such, and not on inherited types-->
        <Setter Property="DropDownContentStyle" Value="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />
    </Style>
    <Style x:Key="DropDownButtonToolbarItemViewIndicatorStyle" TargetType="telerik:DropDownButtonToolbarItemViewIndicator" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:DropDownButtonToolbarItemView" BasedOn="{StaticResource DropDownButtonToolbarItemViewStyle}" />
    <Style TargetType="telerik:DropDownButtonToolbarItemViewIndicator" BasedOn="{StaticResource DropDownButtonToolbarItemViewIndicatorStyle}">
        <Setter Property="BorderThickness" Value="1, 0, 0, 0" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>

    <!-- WORKAROUND: The style for the content should come from the base DropDownButtonToolbarItemViewStyle -->
    <Style TargetType="telerik:ListPickerButtonToolbarItemViewContent" BasedOn="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />
    <Style TargetType="telerik:ListPickerButtonToolbarItemView" BasedOn="{StaticResource DropDownButtonToolbarItemViewStyle}" />

    <!-- BUG: Looks like disabled even if it is not -->
    <!-- BUG: Cannot style the dropdown -->
    <Style x:Key="SplitButtonToolbarItemViewStyle" TargetType="telerik:SplitButtonToolbarItemView" BasedOn="{StaticResource DropDownButtonToolbarItemViewStyle}" />
    <Style TargetType="telerik:SplitButtonToolbarItemView" BasedOn="{StaticResource SplitButtonToolbarItemViewStyle}" />
    <Style x:Key="SplitButtonToolbarItemViewIndicatorStyle" TargetType="telerik:SplitButtonToolbarItemViewIndicator" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}">
        <Setter Property="BorderThickness" Value="1, 0, 0, 0" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>
    <Style TargetType="telerik:SplitButtonToolbarItemViewIndicator" BasedOn="{StaticResource SplitButtonToolbarItemViewIndicatorStyle}" />

    <Style x:Key="RadToolbarOptionsPanelStyle" TargetType="telerik:RadToolbarOptionsPanel">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:RadToolbarOptionsPanel" BasedOn="{StaticResource RadToolbarOptionsPanelStyle}" />

    <Style x:Key="OverflowMenuButtonToolbarItemViewContentStyle" TargetType="telerik:DropDownMenuButtonToolbarItemViewContent" BasedOn="{StaticResource DropDownButtonToolbarItemViewContentStyle}">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style x:Key="OverflowMenuButtonStyle" TargetType="telerik:OverflowMenuButtonToolbarItemView" BasedOn="{StaticResource DropDownButtonToolbarItemViewStyle}">
        <Setter Property="DropDownContentStyle" Value="{StaticResource OverflowMenuButtonToolbarItemViewContentStyle}" />
    </Style>

    <Style x:Key="BackNavigationButtonStyle" TargetType="telerik:BackNavigationButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style x:Key="ScrollForwardButtonStyle" TargetType="telerik:ScrollForwardButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style x:Key="ScrollBackwardButtonStyle" TargetType="telerik:ScrollBackwardButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />

    <Style TargetType="telerik:ToolbarListItemView">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadBorderColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="EntryToolbarItemViewStyle" TargetType="telerik:EntryToolbarItemView">
        <Setter Property="Padding" Value="0" />
        <Setter Property="ContentPadding" Value="0" />
        <Setter Property="MinimumWidthRequest" Value="30" />
        <Setter Property="MinimumHeightRequest" Value="30" />
    </Style>
    <Style TargetType="telerik:EntryToolbarItemView" BasedOn="{StaticResource EntryToolbarItemViewStyle}" />

    <Style x:Key="SliderToolbarItemViewStyle" TargetType="telerik:SliderToolbarItemView">
        <Setter Property="MinimumWidthRequest" Value="{OnPlatform Android=48, iOS=44, WinUI=40, MacCatalyst=20}" />
        <Setter Property="MinimumHeightRequest" Value="{OnPlatform Android=48, iOS=44, WinUI=40, MacCatalyst=20}" />
    </Style>
    <Style TargetType="telerik:SliderToolbarItemView" BasedOn="{StaticResource SliderToolbarItemViewStyle}" />

    <Style x:Key="RadToolbarStyle" TargetType="telerik:RadToolbar">
        <Setter Property="ContentPadding" Value="8" />
        <Setter Property="BackgroundColor" Value="{DynamicResource RadSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="OverflowMenuButtonStyle" Value="{StaticResource OverflowMenuButtonStyle}" />
        <Setter Property="BackNavigationButtonStyle" Value="{StaticResource BackNavigationButtonStyle}" />
        <Setter Property="ScrollForwardButtonStyle" Value="{StaticResource ScrollForwardButtonStyle}" />
        <Setter Property="ScrollBackwardButtonStyle" Value="{StaticResource ScrollBackwardButtonStyle}" />
    </Style>
    <Style TargetType="telerik:RadToolbar" BasedOn="{StaticResource RadToolbarStyle}" />

    <!-- ImageEditor -->

    <!-- BUG: The native slider requires bigger height and leads to jumping issues. -->
    <!-- BUG: The top-level toolbar items look like disabled. -->
    <!-- BUG: The crop options toolbar item looks disabled. -->
    <Style TargetType="telerik:ImageEditorCropOptionsToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:ImageEditorResizeOptionsToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:ImageEditorFilterOptionsToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />
    <Style TargetType="telerik:ImageEditorZoomToolbarItemView" BasedOn="{StaticResource SplitButtonToolbarItemViewStyle}" />

    <Style x:Key="ImageEditorOptionsViewHeaderLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontAttributes" Value="None" />
        <Setter Property="TextTransform" Value="Uppercase" />
    </Style>

    <Style x:Key="ImageEditorOptionsViewCaptionLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontAttributes" Value="None" />
    </Style>

    <Style x:Key="ImageEditorOptionsViewApplyButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadPrimaryButtonStyle}" />
    <Style x:Key="ImageEditorOptionsViewCancelButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}" />

    <Style x:Key="ImageEditorOptionsToolbarItemViewContentStyle" TargetType="telerik:ImageEditorOptionsToolbarItemViewContent">
        <Setter Property="HeaderLabelStyle" Value="{StaticResource ImageEditorOptionsViewHeaderLabelStyle}" />
        <Setter Property="CaptionLabelStyle" Value="{StaticResource ImageEditorOptionsViewCaptionLabelStyle}" />
        <Setter Property="ApplyButtonStyle" Value="{StaticResource ImageEditorOptionsViewApplyButtonStyle}" />
        <Setter Property="CancelButtonStyle" Value="{StaticResource ImageEditorOptionsViewCancelButtonStyle}" />
    </Style>

    <!-- NOTE: Could have spared the control template override, but wanted to replace the MS with RadButtons. -->
    <ControlTemplate x:Key="ImageEditorCropOptionsToolbarItemViewContentTemplate">
        <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto"
              Padding="20">
            <Label Text="{TemplateBinding HeaderText}"
                   Style="{TemplateBinding ActualHeaderLabelStyle}" />
            <Label Grid.Row="2"
                   Text="{TemplateBinding CropOperationText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadComboBox Grid.Row="3"
                                 ItemsSource="{TemplateBinding CropOperations}"
                                 SelectedItem="{TemplateBinding SelectedCropOperation}"
                                 Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Grid Grid.Row="4"
                  ColumnDefinitions="Auto, Auto"
                  ColumnSpacing="{OnPlatform Default=4, MacCatalyst=8}"
                  HorizontalOptions="End">
                <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                   Text="{TemplateBinding CancelText}"
                                   Command="{TemplateBinding CancelCommand}"
                                   Style="{TemplateBinding ActualCancelButtonStyle}" />
                <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}" 
                                   Text="{TemplateBinding ApplyText}"
                                   Command="{TemplateBinding ApplyCommand}"
                                   Style="{TemplateBinding ActualApplyButtonStyle}" />
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style TargetType="telerik:ImageEditorCropOptionsToolbarItemViewContent" BasedOn="{StaticResource ImageEditorOptionsToolbarItemViewContentStyle}">
        <!-- BUG: Does not apply -->
        <Setter Property="ControlTemplate" Value="{StaticResource ImageEditorCropOptionsToolbarItemViewContentTemplate}" />
    </Style>

    <!-- NOTE: Could have spared the control template override,
               but wanted to replace the MS with RadButtons and MS with RadSliders. -->
    <ControlTemplate x:Key="ImageEditorResizeOptionsToolbarItemViewContentTemplate">
        <VerticalStackLayout Padding="20">
            <Label Text="{TemplateBinding HeaderText}"
                   Style="{TemplateBinding ActualHeaderLabelStyle}" />
            <Label Text="{TemplateBinding ResizeTypeText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadComboBox SelectedItem="{TemplateBinding ResizeType}"
                                 Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}">
                <telerik:RadComboBox.ItemsSource>
                    <x:Array Type="{x:Type telerikImageEditor:ResizeType}">
                        <telerikImageEditor:ResizeType>Percents</telerikImageEditor:ResizeType>
                        <telerikImageEditor:ResizeType>Pixels</telerikImageEditor:ResizeType>
                    </x:Array>
                </telerik:RadComboBox.ItemsSource>
            </telerik:RadComboBox>
            <VerticalStackLayout Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}">
                <VerticalStackLayout.Triggers>
                    <DataTrigger TargetType="VerticalStackLayout" Binding="{TemplateBinding ResizeType}" Value="Percents">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                    <DataTrigger TargetType="VerticalStackLayout" Binding="{TemplateBinding ResizeType}" Value="Pixels">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                </VerticalStackLayout.Triggers>
                <Grid ColumnDefinitions="*, *"
                      RowDefinitions="Auto, Auto"
                      ColumnSpacing="10"
                      Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}">
                    <Label Grid.Column="0"
                           Grid.Row="0"
                           Text="{TemplateBinding ResizeWidthText}"
                           Style="{TemplateBinding ActualCaptionLabelStyle}" />
                    <telerik:RadNumericInput Grid.Column="0"
                                             Grid.Row="1"
                                             Minimum="0"
                                             Value="{TemplateBinding ResizeWidth}" />
                    <Label Grid.Column="1"
                           Grid.Row="0"
                           Text="{TemplateBinding ResizeHeightText}"
                           Style="{TemplateBinding ActualCaptionLabelStyle}" />
                    <telerik:RadNumericInput Grid.Column="1"
                                             Grid.Row="1"
                                             Minimum="0"
                                             Value="{TemplateBinding ResizeHeight}" />
                </Grid>
                <HorizontalStackLayout Spacing="4">
                    <telerik:RadCheckBox IsChecked="{TemplateBinding IsAspectRatioLocked}" />
                    <Label Text="{TemplateBinding AspectRatioLockedText}"
                           Style="{TemplateBinding ActualCaptionLabelStyle}" />
                </HorizontalStackLayout>
            </VerticalStackLayout>
            <VerticalStackLayout Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}">
                <VerticalStackLayout.Triggers>
                    <DataTrigger TargetType="VerticalStackLayout" Binding="{TemplateBinding ResizeType}" Value="Percents">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                    <DataTrigger TargetType="VerticalStackLayout" Binding="{TemplateBinding ResizeType}" Value="Pixels">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </VerticalStackLayout.Triggers>
                <Label Text="{TemplateBinding ResizeScaleText}"
                       Style="{TemplateBinding ActualCaptionLabelStyle}" />
                <telerik:RadSlider Maximum="{TemplateBinding ResizeScaleMaximum}"
                                   Minimum="{TemplateBinding ResizeScaleMinimum}"
                                   Value="{TemplateBinding ResizeScale}" />
            </VerticalStackLayout>
            <Grid ColumnDefinitions="Auto, Auto"
                  ColumnSpacing="{OnPlatform Default=4, MacCatalyst=8}"
                  HorizontalOptions="End">
                <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                   Text="{TemplateBinding CancelText}"
                                   Command="{TemplateBinding CancelCommand}"
                                   Style="{TemplateBinding ActualCancelButtonStyle}" />
                <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                   Text="{TemplateBinding ApplyText}"
                                   Command="{TemplateBinding ApplyCommand}"
                                   Style="{TemplateBinding ActualApplyButtonStyle}" />
            </Grid>
        </VerticalStackLayout>
    </ControlTemplate>
    <Style TargetType="telerik:ImageEditorResizeOptionsToolbarItemViewContent" BasedOn="{StaticResource ImageEditorOptionsToolbarItemViewContentStyle}">
        <!-- BUG: Does not apply -->
        <Setter Property="ControlTemplate" Value="{StaticResource ImageEditorResizeOptionsToolbarItemViewContentTemplate}" />
    </Style>

    <!-- NOTE: Could have spared the control template override,
               but wanted to replace the MS with RadButtons and MS with RadSliders. -->
    <ControlTemplate x:Key="ImageEditorFilterOptionsToolbarItemViewContentTemplate">
        <VerticalStackLayout Padding="20">
            <Label Text="{TemplateBinding HeaderText}"
                   Style="{TemplateBinding ActualHeaderLabelStyle}" />
            <Label Text="{TemplateBinding HueText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding HueMaximum}"
                               Minimum="{TemplateBinding HueMinimum}"
                               Value="{TemplateBinding Hue}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Label Text="{TemplateBinding SaturationText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding SaturationMaximum}"
                               Minimum="{TemplateBinding SaturationMinimum}"
                               Value="{TemplateBinding Saturation}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Label Text="{TemplateBinding BrightnessText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding BrightnessMaximum}"
                               Minimum="{TemplateBinding BrightnessMinimum}"
                               Value="{TemplateBinding Brightness}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Label Text="{TemplateBinding ContrastText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding ContrastMaximum}"
                               Minimum="{TemplateBinding ContrastMinimum}"
                               Value="{TemplateBinding Contrast}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Label Text="{TemplateBinding BlurText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding BlurMaximum}"
                               Minimum="{TemplateBinding BlurMinimum}"
                               Value="{TemplateBinding Blur}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Label Text="{TemplateBinding SharpenText}"
                   Style="{TemplateBinding ActualCaptionLabelStyle}" />
            <telerik:RadSlider Maximum="{TemplateBinding SharpenMaximum}"
                               Minimum="{TemplateBinding SharpenMinimum}"
                               Value="{TemplateBinding Sharpen}"
                               Margin="{OnPlatform Default='0, 0, 0, 24', MacCatalyst='0, 0, 0, 20'}" />
            <Grid ColumnDefinitions="Auto, Auto"
                  ColumnSpacing="{OnPlatform Default=4, MacCatalyst=8}"
                  HorizontalOptions="End">
                <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}" 
                                   Text="{TemplateBinding CancelText}"
                                   Command="{TemplateBinding CancelCommand}"
                                   Style="{TemplateBinding ActualCancelButtonStyle}" />
                <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                   Text="{TemplateBinding ApplyText}"
                                   Command="{TemplateBinding ApplyCommand}"
                                   Style="{TemplateBinding ActualApplyButtonStyle}" />
            </Grid>
        </VerticalStackLayout>
    </ControlTemplate>
    <Style TargetType="telerik:ImageEditorFilterOptionsToolbarItemViewContent" BasedOn="{StaticResource ImageEditorOptionsToolbarItemViewContentStyle}">
        <!-- BUG: Does not apply -->
        <Setter Property="ControlTemplate" Value="{StaticResource ImageEditorFilterOptionsToolbarItemViewContentTemplate}" />
    </Style>

    <Style TargetType="telerik:RadImageEditorToolbar" BasedOn="{StaticResource RadToolbarStyle}" />

    <!-- Charts -->
    <!-- BUG: Cannot use DynamicResource as PaletteEntry's Fill/StrokeColor -->
    <!-- BUG: None of the implicit styles for the axis and cartesian chart grid apply.
              Setter values are respected only on an instance. Example with this workaround - Area Series -->

    <telerik:ChartPalette x:Key="DefaultChartPalette">
        <telerik:ChartPalette.Entries>
            <telerik:PaletteEntry FillColor="#FF6358" StrokeColor="#FF6358" />
            <telerik:PaletteEntry FillColor="#FFE162" StrokeColor="#FFE162" />
            <telerik:PaletteEntry FillColor="#4CD180" StrokeColor="#4CD180" />
            <telerik:PaletteEntry FillColor="#4B5FFA" StrokeColor="#4B5FFA" />
            <telerik:PaletteEntry FillColor="#AC58FF" StrokeColor="#AC58FF" />
            <telerik:PaletteEntry FillColor="#FF5892" StrokeColor="#FF5892" />
        </telerik:ChartPalette.Entries>
    </telerik:ChartPalette>

    <telerik:ChartPalette x:Key="DefaultSelectionChartPalette">
        <telerik:ChartPalette.Entries>
            <telerik:PaletteEntry FillColor="#FF8A82" StrokeColor="#FF8A82" />
            <telerik:PaletteEntry FillColor="#FFE989" StrokeColor="#FFE989" />
            <telerik:PaletteEntry FillColor="#79DDA0" StrokeColor="#79DDA0" />
            <telerik:PaletteEntry FillColor="#7887FB" StrokeColor="#7887FB" />
            <telerik:PaletteEntry FillColor="#C182FF" StrokeColor="#C182FF" />
            <telerik:PaletteEntry FillColor="#FF82AE" StrokeColor="#FF82AE" />
        </telerik:ChartPalette.Entries>
    </telerik:ChartPalette>

    <Style TargetType="telerik:RadCartesianChart">
        <Setter Property="Background" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="Palette" Value="{StaticResource DefaultChartPalette}" />
        <Setter Property="SelectionPalette" Value="{DynamicResource DefaultSelectionChartPalette}" />
    </Style>

    <Style TargetType="telerik:RadPieChart">
        <Setter Property="Background" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="Palette" Value="{StaticResource DefaultChartPalette}" />
        <Setter Property="SelectionPalette" Value="{DynamicResource DefaultSelectionChartPalette}" />
    </Style>

   <Style x:Key="CategoricalAxisStyle" TargetType="telerik:CategoricalAxis">
        <Setter Property="LabelTextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="LineColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="MajorTickBackgroundColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:CategoricalAxis" BasedOn="{StaticResource CategoricalAxisStyle}" />

    <Style x:Key="NumericalAxisStyle" TargetType="telerik:NumericalAxis">
        <Setter Property="LabelTextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="LineColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="MajorTickBackgroundColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:NumericalAxis" BasedOn="{StaticResource NumericalAxisStyle}" />

    <Style x:Key="DateTimeContinuousAxisStyle" TargetType="telerik:DateTimeContinuousAxis">
        <Setter Property="LabelTextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="LineColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="MajorTickBackgroundColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:DateTimeContinuousAxis" BasedOn="{StaticResource DateTimeContinuousAxisStyle}" />

    <Style x:Key="CartesianChartGridStyle" TargetType="telerik:CartesianChartGrid">
        <Setter Property="MajorLineColor" Value="{DynamicResource RadBorderColor}" />
    </Style>
    <Style TargetType="telerik:CartesianChartGrid" BasedOn="{StaticResource CartesianChartGridStyle}" />

    <Style x:Key="DataFormHeaderLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
    </Style>

    <Style x:Key="DataFormHeaderStyle" TargetType="telerik:DataFormGroupHeaderView">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
    </Style>

    <Style x:Key="DataFormGroupStyle" TargetType="telerik:DataFormGroup">
        <Setter Property="HeaderStyle" Value="{StaticResource DataFormHeaderStyle}" />
        <Setter Property="HeaderLabelStyle" Value="{StaticResource DataFormHeaderLabelStyle}" />
    </Style>

    <Style TargetType="telerik:DataFormGroup" BasedOn="{StaticResource DataFormGroupStyle}" />

    <Style x:Key="DataFormErrorLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadErrorColor}" />
        <Setter Property="FontAttributes" Value="Italic" />
    </Style>

    <Style x:Key="DataFormValidationSummaryImageStyle" TargetType="Image">
        <!-- TODO: Verify with designers; Kendo's validation does not have icon in the summary -->
        <Setter Property="IsVisible" Value="False" />
        <Setter Property="Source">
            <FontImageSource FontFamily="{x:Static telerikMaui:TelerikFont.Name}"
                             Glyph="{x:Static telerikMaui:TelerikFont.IconError}"
                             Size="24"
                             Color="{DynamicResource RadErrorOnSubtleColor}" />
        </Setter>
    </Style>

    <Style x:Key="DataFormValidationSummaryLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadErrorOnSubtleColor}" />
    </Style>

    <Style x:Key="DataFormValidationSummaryStyle" TargetType="telerik:DataFormValidationSummaryView">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadErrorSubtleColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadErrorSubtleHoverColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="2" />
    </Style>

    <!-- TODO: Discuss the possibility of using our inputs or exposing a way to style the native ones -->
    <Style x:Key="RadDataFormStyle" TargetType="telerik:RadDataForm">
        <Setter Property="ErrorLabelStyle" Value="{StaticResource DataFormErrorLabelStyle}" />
        <Setter Property="ValidationSummaryImageStyle" Value="{StaticResource DataFormValidationSummaryImageStyle}" />
        <Setter Property="ValidationSummaryLabelStyle" Value="{StaticResource DataFormValidationSummaryLabelStyle}" />
        <Setter Property="ValidationSummaryStyle" Value="{StaticResource DataFormValidationSummaryStyle}" />
    </Style>
    <Style TargetType="telerik:RadDataForm" BasedOn="{StaticResource RadDataFormStyle}" />

    <!-- Chat -->
    <!-- TODO: Expose Styling API for all supported chat picker types - cards, items, etc. -->

    <Style x:Key="ChatIncomingTextMessageViewStyle" TargetType="telerik:IncomingTextMessageView">
        <Setter Property="LabelStyle">
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
            </Style>
        </Setter>
        <Setter Property="BorderStyle">
            <Style TargetType="telerik:RadBorder">
                <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
            </Style>
        </Setter>
    </Style>
    <!-- BUG: Does not apply at all if set in App.xaml, applies if set on a single example level. -->
    <!-- BUG: Does not apply for any of its descendant types if the ApplyToDerivedTypes is not set to true. -->
    <!-- <Style TargetType="telerik:IncomingTextMessageView" BasedOn="{StaticResource ChatIncomingTextMessageViewStyle}" ApplyToDerivedTypes="True" /> -->

    <!-- Setting either of the following produces an exception. -->
    <!-- <Style TargetType="telerik:IncomingSingleTextMessageView" BasedOn="{StaticResource ChatIncomingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:IncomingFirstTextMessageView" BasedOn="{StaticResource ChatIncomingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:IncomingMiddleTextMessageView" BasedOn="{StaticResource ChatIncomingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:IncomingLastTextMessageView" BasedOn="{StaticResource ChatIncomingTextMessageViewStyle}" /> -->

    <Style x:Key="ChatOutgoingTextMessageViewStyle" TargetType="telerik:OutgoingTextMessageView">
        <Setter Property="LabelStyle">
            <Style TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
            </Style>
        </Setter>
        <Setter Property="BorderStyle">
            <Style TargetType="telerik:RadBorder">
                <Setter Property="BackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
            </Style>
        </Setter>
    </Style>
    <!-- BUG: Does not apply at all if set in App.xaml, applies if set on a single example level. -->
    <!-- BUG: Does not apply for any of its descendant types if the ApplyToDerivedTypes is not set to true. -->
    <!-- <Style TargetType="telerik:OutgoingTextMessageView" BasedOn="{StaticResource ChatOutgoingTextMessageViewStyle}" ApplyToDerivedTypes="True" /> -->

    <!-- Setting either of the following produces an exception. -->
    <!-- <Style TargetType="telerik:OutgoingSingleTextMessageView" BasedOn="{StaticResource ChatOutgoingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:OutgoingFirstTextMessageView" BasedOn="{StaticResource ChatOutgoingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:OutgoingMiddleTextMessageView" BasedOn="{StaticResource ChatOutgoingTextMessageViewStyle}" /> -->
    <!-- <Style TargetType="telerik:OutgoingLastTextMessageView" BasedOn="{StaticResource ChatOutgoingTextMessageViewStyle}" /> -->

    <!-- TODO: Verify whether we need Uppercase TextTransform with designers -->
    <Style x:Key="ChatTimeBreakViewStyle" TargetType="telerik:TimeBreakView">
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="Stroke" Value="{DynamicResource RadBorderColor}" />
        <!-- TODO: Verify this with designers -->
        <Setter Property="StrokeThickness" Value="0" />
    </Style>
    <Style TargetType="telerik:TimeBreakView" BasedOn="{StaticResource ChatTimeBreakViewStyle}" />

    <!-- TODO: Verify with designers as it was missing in the Kendo theme -->
    <Style x:Key="ChatTypingIndicatorStyle" TargetType="telerik:TypingIndicator">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="DotsColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
    </Style>
    <Style TargetType="telerik:TypingIndicator" BasedOn="{StaticResource ChatTypingIndicatorStyle}" />

    <Style TargetType="telerik:ChatEntry" BasedOn="{StaticResource RadEntryStyle}" />

    <Style x:Key="ChatSuggestedActionItemStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadPrimaryOutlineButtonStyle}">
        <Setter Property="Padding" Value="12, 8" />
        <Setter Property="CornerRadius" Value="18" />
    </Style>

    <DataTemplate x:Key="ChatSuggestedActionItemTemplate">
        <telerik:RadButton Text="{Binding Text}"
                           Command="{Binding Command}"
                           Style="{StaticResource ChatSuggestedActionItemStyle}" 
                           AutomationId="SuggestedActionButton" />
    </DataTemplate>

    <!-- BUG: Does not apply at all -->
    <!-- <Style x:Key="ChatSuggestedActionsViewStyle" TargetType="telerik:SuggestedActionsView">
        <Setter Property="ItemTemplate" Value="{StaticResource ChatSuggestedActionItemTemplate}" />
    </Style>
    <Style TargetType="telerik:SuggestedActionsView" BasedOn="{StaticResource ChatSuggestedActionsViewStyle}" /> -->

    <!-- WORKAROUND: for not being able to style the SuggestedActionsView's item -->
    <DataTemplate x:Key="ChatSuggestedActionsTemplate">
        <!-- Cannot set this, StyleHelper is internal: telerik:StyleHelper.InheritedStyleClass="{Binding Chat.ActualStyleClass}" -->
        <telerik:SuggestedActionsView ItemsSource="{Binding Actions}"
                                      ItemTemplate="{DynamicResource ChatSuggestedActionItemTemplate}"
                                      SelectionMode="None"
                                      Orientation="Horizontal">
            <telerik:SuggestedActionsView.ItemsLayoutTemplate>
                <DataTemplate>
                    <HorizontalStackLayout Padding="{OnPlatform Default='0, 10', WinUI=10, MacCatalyst='12, 10'}"
                                           Spacing="4" />
                </DataTemplate>
            </telerik:SuggestedActionsView.ItemsLayoutTemplate>
        </telerik:SuggestedActionsView>
    </DataTemplate>
    <telerik:ChatItemTemplateSelector x:Key="ChatItemTemplateSelector"
                                      SuggestedActionsTemplate="{StaticResource ChatSuggestedActionsTemplate}" />

    <Style x:Key="ChartCardLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
    </Style>

    <Style x:Key="ChatBasicCardViewStyle" TargetType="telerik:BasicCardView">
        <Setter Property="ContentBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="TitleStyle" Value="{StaticResource ChartCardLabelStyle}" />
        <Setter Property="SubtitleStyle" Value="{StaticResource ChartCardLabelStyle}" />
        <Setter Property="DescriptionStyle" Value="{StaticResource ChartCardLabelStyle}" />
    </Style>

    <!-- BUG: The following styles do not apply at all if set in App.xaml, only if set on a single example level.
         Not applying for any of its descendant types, too if the ApplyToDerivedTypes is not set to true. -->
    <!-- <Style TargetType="telerik:BasicCardView" BasedOn="{StaticResource ChatBasicCardViewStyle}" ApplyToDerivedTypes="True" /> -->
    <!-- <Style TargetType="telerik:ImageCardView" BasedOn="{StaticResource ChatBasicCardViewStyle}" /> -->

    <Style x:Key="ChatPickerButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadPrimaryFlatButtonStyle}" />

    <telerik:StringToBoolConverter x:Key="StringToBoolConverter" />
    <telerik:MultiBooleanConverter x:Key="ChatIsFooterVisibleConverter" LogicalOperator="Or" />

    <ControlTemplate x:Key="RadChatPickerControlTemplate">
        <telerik:RadBorder x:Name="BorderVisual"
                           BackgroundColor="{DynamicResource RadAppSurfaceColor}"
                           BorderColor="{DynamicResource RadBorderColor}"
                           BorderThickness="1"
                           HorizontalOptions="{OnIdiom Default=Fill, Desktop=Start}"
                           Margin="{OnPlatform Default='0, 0, 0, 10', WinUI='0, 0, 0, 12'}">
            <Grid RowDefinitions="Auto, *, Auto">
                <telerik:RadBorder x:Name="PART_Header"
                                   IsVisible="{TemplateBinding HeaderText, Converter={StaticResource StringToBoolConverter}}"
                                   BorderColor="{DynamicResource RadBorderColor}"
                                   BorderThickness="0, 0, 0, 1"
                                   Padding="{OnPlatform Android='16, 15', iOS='16, 13.5', MacCatalyst='6, 7.5', WinUI='16, 14'}">
                    <Label x:Name="PART_HeaderLabel"
                           Text="{TemplateBinding HeaderText}"
                           TextColor="{DynamicResource RadOnAppSurfaceColor}"
                           LineBreakMode="WordWrap"
                           IsVisible="{TemplateBinding HeaderText, Converter={StaticResource StringToBoolConverter}}" />
                </telerik:RadBorder>
                <ContentPresenter Grid.Row="1" />
                <telerik:RadBorder x:Name="PART_Footer"
                                   Grid.Row="2"
                                   BorderColor="{DynamicResource RadBorderColor}"
                                   BorderThickness="0, 1, 0, 0"
                                   Padding="{OnPlatform Android='8, 6', iOS='8, 0', MacCatalyst='0, 6', WinUI='8, 6.5'}">
                    <telerik:RadBorder.IsVisible>
                        <MultiBinding Converter="{StaticResource ChatIsFooterVisibleConverter}">
                            <Binding Path="IsCancelButtonVisible" Source="{RelativeSource TemplatedParent}" />
                            <Binding Path="IsOkButtonVisible" Source="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </telerik:RadBorder.IsVisible>
                    <Grid ColumnDefinitions="{OnIdiom Desktop='*, *', Phone='Auto, Auto'}"
                          HorizontalOptions="{OnIdiom Desktop=Fill, Phone=End}"
                          ColumnSpacing="{OnIdiom Desktop=0, Phone=8}">
                        <!-- Cannot set to any of the buttons the following as StyleHelper is internal: telerik:StyleHelper.InheritedStyleClass="{Binding Chat.ActualStyleClass}" -->
                        <telerik:RadButton x:Name="PART_CancelButton"
                                           Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                           Text="Cancel"
                                           IsVisible="{TemplateBinding IsCancelButtonVisible}"
                                           Command="{TemplateBinding ActualCancelCommand}"
                                           Style="{StaticResource ChatPickerButtonStyle}" />
                        <telerik:RadButton x:Name="PART_OkButton"
                                           Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                           Text="Ok"
                                           IsVisible="{TemplateBinding IsOkButtonVisible}"
                                           Command="{TemplateBinding ActualOkCommand}"
                                           Style="{StaticResource ChatPickerButtonStyle}" />
                    </Grid>
                </telerik:RadBorder>
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>
    <Style x:Key="RadChatPickerStyle" TargetType="telerik:RadChatPicker">
        <!-- BUG: The ControlTemplate does not apply through Style, only on instance -->
        <Setter Property="ControlTemplate" Value="{StaticResource RadChatPickerControlTemplate}" />
        <Setter Property="HeaderTextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="HeaderBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="FooterBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="OkButtonTextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="CancelButtonTextColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>
    <Style TargetType="telerik:RadChatPicker" BasedOn="{StaticResource RadChatPickerStyle}" />

    <!-- BUG: No way to add a border because it inherits RadContentView, not RadBorder/RadBorderContentView -->
    <!-- BUG: No way to set BackgroundColor; only Background works -->
    <!-- TODO: Start using Rad button for send message button, as currently it is ImageButton and there is no styling API for it -->
    <!-- TODO: Discuss input area style compared to Kendo's -->
    <!-- TODO: Discuss whether we want to add Shadow to the message views -->
    <Style x:Key="RadChatStyle" TargetType="telerik:RadChat">
        <Setter Property="Background" Value="{DynamicResource RadSurfaceColor}" />
        <Setter Property="InputAreaBackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource ChatItemTemplateSelector}" />
    </Style>
    <Style TargetType="telerik:RadChat" BasedOn="{StaticResource RadChatStyle}" />

    <!-- Calendar -->

    <Style x:Key="CalendarHeaderLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
    </Style>

    <Style x:Key="CalendarHeaderBorderStyle" TargetType="telerik:RadBorder">
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="12, 8" />
        <Setter Property="HeightRequest" Value="38" />
    </Style>

    <Style x:Key="CalendarDayNameLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
        <Setter Property="FontAttributes" Value="None" />
    </Style>

    <Style x:Key="CalendarNavigateToViewButtonStyle" TargetType="Button">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="PointerOver">
                        <!-- TODO: Kendo's hover background is RadPrimaryColor with 4% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadOnAppSurfaceColor}" Opacity="0.04" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <!-- TODO: Kendo's pressed background is RadPrimaryColor with 16% opacity -->
                        <!-- <VisualState.Setters>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource RadOnAppSurfaceColor}" Opacity="0.16" />
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters> -->
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.6" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <!-- TODO: Kendo's is achieved by 2px INSIDE border that is 12% RadPrimaryColor -->
                    <VisualState x:Name="Focused">
                        <VisualState.Setters>
                            <Setter Property="Shadow" Value="{DynamicResource InputFocusedShadow}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="CalendarLabel_Style" TargetType="telerik:CalendarLabel">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
    </Style>

    <Style x:Key="CalendarLabel_OutOfScope_Style" TargetType="telerik:CalendarLabel" BasedOn="{StaticResource CalendarLabel_Style}">
        <Setter Property="TextColor" Value="{DynamicResource RadSubtleColor}" />
    </Style>

    <Style x:Key="CalendarLabel_Disabled_Style" TargetType="telerik:CalendarLabel" BasedOn="{StaticResource CalendarLabel_Style}">
        <Setter Property="Opacity" Value="0.6" />
    </Style>

    <Style x:Key="CalendarBorderLabelBaseStyle" TargetType="telerik:CalendarBorderLabel">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
    </Style>

    <Style x:Key="CalendarBorderLabel_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelBaseStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <!-- TODO: Should be 8% RadOnAppSurfaceColor -->
        <Setter Property="BorderBackgroundColor" Value="{DynamicResource RadBaseSubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Selected_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelBaseStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBackgroundColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnPrimaryColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Selected_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_Style}">
        <Setter Property="BorderBackgroundColor" Value="{DynamicResource RadPrimaryHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabelRangeBaseStyle" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_Style}">
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_FirstInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelRangeBaseStyle}" />

    <Style x:Key="CalendarBorderLabel_FirstInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_MouseOver_Style}">
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_MiddleInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelRangeBaseStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="BorderBackgroundColor" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="CalendarBorderLabel_MiddleInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_MouseOver_Style}">
        <Setter Property="BorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleActiveColor}" />
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_LastInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelRangeBaseStyle}" />

    <Style x:Key="CalendarBorderLabel_LastInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_MouseOver_Style}">
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

     <Style x:Key="CalendarBorderLabel_Today_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelBaseStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Today_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_MouseOver_Style}" />

    <Style x:Key="CalendarBorderLabel_Today_Selected_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_Style}" />

    <Style x:Key="CalendarBorderLabel_Today_SelectedMouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Selected_MouseOver_Style}" />

    <Style x:Key="CalendarBorderLabelTodayRangeBaseStyle" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Today_Selected_Style}">
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabelTodayRangeMouseOverBaseStyle" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_Today_SelectedMouseOver_Style}">
        <Setter Property="SecondaryBorderBackgroundColor" Value="{DynamicResource RadPrimarySubtleHoverColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Today_FirstInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelTodayRangeBaseStyle}" />

    <Style x:Key="CalendarBorderLabel_Today_FirstInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelTodayRangeMouseOverBaseStyle}" />

    <Style x:Key="CalendarBorderLabel_Today_MiddleInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelTodayRangeBaseStyle}">
        <Setter Property="TextColor" Value="{DynamicResource RadPrimaryColor}" />
        <Setter Property="BorderBackgroundColor" Value="Transparent" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Today_MiddleInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabel_MiddleInRange_MouseOver_Style}">
        <Setter Property="TextColor" Value="{DynamicResource RadPrimaryColor}" />
    </Style>

    <Style x:Key="CalendarBorderLabel_Today_LastInRange_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelTodayRangeBaseStyle}" />

    <Style x:Key="CalendarBorderLabel_Today_LastInRange_MouseOver_Style" TargetType="telerik:CalendarBorderLabel" BasedOn="{StaticResource CalendarBorderLabelTodayRangeMouseOverBaseStyle}" />

    <!-- TODO: All Kendo calendar bordered labels have corner radius 2px - do we want it? -->
    <telerik:CalendarStyleSelector x:Key="CalendarStyleSelector"
                                   NormalLabelStyle="{StaticResource CalendarLabel_Style}"
                                   OutOfScopeLabelStyle="{StaticResource CalendarLabel_OutOfScope_Style}"
                                   DisabledLabelStyle="{StaticResource CalendarLabel_Disabled_Style}"
                                   MouseOverBorderStyle="{StaticResource CalendarBorderLabel_MouseOver_Style}"
                                   SelectedBorderStyle="{StaticResource CalendarBorderLabel_Selected_Style}"
                                   SelectedMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Selected_MouseOver_Style}"
                                   FirstInRangeBorderStyle="{StaticResource CalendarBorderLabel_FirstInRange_Style}"
                                   FirstInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_FirstInRange_MouseOver_Style}"
                                   MiddleInRangeBorderStyle="{StaticResource CalendarBorderLabel_MiddleInRange_Style}"
                                   MiddleInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_MiddleInRange_MouseOver_Style}"
                                   LastInRangeBorderStyle="{StaticResource CalendarBorderLabel_LastInRange_Style}"
                                   LastInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_LastInRange_MouseOver_Style}"
                                   TodayBorderStyle="{StaticResource CalendarBorderLabel_Today_Style}"
                                   TodayMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Today_MouseOver_Style}"
                                   TodaySelectedBorderStyle="{StaticResource CalendarBorderLabel_Today_Selected_Style}"
                                   TodaySelectedMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Today_SelectedMouseOver_Style}"
                                   TodayFirstInRangeBorderStyle="{StaticResource CalendarBorderLabel_Today_FirstInRange_Style}"
                                   TodayFirstInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Today_FirstInRange_MouseOver_Style}"
                                   TodayMiddleInRangeBorderStyle="{StaticResource CalendarBorderLabel_Today_MiddleInRange_Style}"
                                   TodayMiddleInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Today_MiddleInRange_MouseOver_Style}"
                                   TodayLastInRangeBorderStyle="{StaticResource CalendarBorderLabel_Today_LastInRange_Style}"
                                   TodayLastInRangeMouseOverBorderStyle="{StaticResource CalendarBorderLabel_Today_LastInRange_MouseOver_Style}" />

    <!-- TODO: For the navigate to view buttons to have different icon glyphs,
               a way to set different styles depending on the NavigationDirection needs to be exposed -->
    <!-- TODO: For the calendar bordered labels to resemble Kendo's rounded rectangles,
               we would need to define custom template but do we want it? -->
    <Style x:Key="RadCalendarStyle" TargetType="telerik:RadCalendar">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HeaderLabelStyle" Value="{StaticResource CalendarHeaderLabelStyle}" />
        <Setter Property="HeaderBorderStyle" Value="{StaticResource CalendarHeaderBorderStyle}" />
        <Setter Property="DayNameLabelStyle" Value="{StaticResource CalendarDayNameLabelStyle}" />
        <Setter Property="NavigateToPreviousViewButtonStyle" Value="{StaticResource CalendarNavigateToViewButtonStyle}" />
        <Setter Property="NavigateToNextViewButtonStyle" Value="{StaticResource CalendarNavigateToViewButtonStyle}" />
        <Setter Property="DayStyleSelector" Value="{StaticResource CalendarStyleSelector}" />
        <Setter Property="MonthStyleSelector" Value="{StaticResource CalendarStyleSelector}" />
        <Setter Property="YearStyleSelector" Value="{StaticResource CalendarStyleSelector}" />
        <Setter Property="DecadeStyleSelector" Value="{StaticResource CalendarStyleSelector}" />
    </Style>
    <Style TargetType="telerik:RadCalendar" BasedOn="{StaticResource RadCalendarStyle}" />

    <!-- PdfViewer -->

    <!-- TODO: Discuss with designers -->
    <Style x:Key="PdfViewerSearchToastStyle" TargetType="telerik:PdfViewerSearchToast">
        <Setter Property="Fill" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="TextColor" Value="{DynamicResource RadOnAppSurfaceColor}" />
        <Setter Property="Shadow" Value="{StaticResource PopupShadow}" />
    </Style>
    <Style TargetType="telerik:PdfViewerSearchToast" BasedOn="{StaticResource PdfViewerSearchToastStyle}" />

    <!-- BUG: Does not apply when in App.xaml, applies if defined in example's Resources or as implicit style -->
    <Style TargetType="telerik:PdfViewerSearchNavigationToolbarItem">
        <!-- <Setter Property="ToastStyle" Value="{StaticResource PdfViewerSearchToastStyle}" /> -->
    </Style>

    <Style TargetType="telerik:PdfViewerNavigateToPreviousSearchResultToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />

    <Style TargetType="telerik:PdfViewerNavigateToNextSearchResultToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />

    <!-- BUG: Does not apply when in App.xaml, applies if defined in example's Resources
              However, it is not necessarily needed as the implicit style for entry applies without this Style.
              Added x:Key to be able to try setting it to the SearchEntryToolbarItemStyle of the PdfViewerSearchContentView. -->
    <Style x:Key="PdfViewerSearchEntryToolbarItemStyle" TargetType="telerik:PdfViewerSearchEntryToolbarItemView">
        <Setter Property="EntryStyle">
            <Style TargetType="telerik:RadEntry" BasedOn="{StaticResource RadEntryStyle}" />
        </Setter>
    </Style>

    <!-- BUG: Does not apply when in App.xaml, applies if defined in example's Resources.
              Added x:Key to be able to try setting it to the BusyIndicatorToolbarItemStyle of the PdfViewerSearchContentView. -->
    <Style x:Key="PdfViewerSearchBusyIndicatorToolbarItemStyle" TargetType="telerik:PdfViewerSearchBusyIndicatorToolbarItemView">
        <Setter Property="BusyIndicatorStyle">
            <Style TargetType="telerik:RadBusyIndicator" BasedOn="{StaticResource RadBusyIndicatorStyle}" />
        </Setter>
    </Style>

    <Style x:Key="PdfViewerSearchResultsLabelToolbarItemStyle" TargetType="telerik:LabelToolbarItemView" BasedOn="{StaticResource LabelToolbarItemViewStyle}" />

    <Style x:Key="PdfViewerSearchButtonToolbarItemStyle" TargetType="telerik:ButtonToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}" />

    <Style x:Key="RadPdfViewerToolbarStyle" TargetType="telerik:RadPdfViewerToolbar" BasedOn="{StaticResource RadToolbarStyle}" />
    <Style TargetType="telerik:RadPdfViewerToolbar" BasedOn="{StaticResource RadPdfViewerToolbarStyle}" />

    <Style x:Key="PdfViewerSearchContentViewStyle" TargetType="telerik:PdfViewerSearchContentView">
        <!-- BUG: None of the following styles applies. Respected only on an instance of PdfViewerSearchToolbarItem as SearchContentViewStyle. -->
        <Setter Property="SearchEntryToolbarItemStyle" Value="{StaticResource PdfViewerSearchEntryToolbarItemStyle}" />
        <Setter Property="SearchResultsLabelToolbarItemStyle" Value="{StaticResource PdfViewerSearchResultsLabelToolbarItemStyle}" />
        <Setter Property="CloseButtonToolbarItemStyle" Value="{StaticResource PdfViewerSearchButtonToolbarItemStyle}" />
        <Setter Property="PreviousSearchResultToolbarItemStyle" Value="{StaticResource PdfViewerSearchButtonToolbarItemStyle}" />
        <Setter Property="NextSearchResultToolbarItemStyle" Value="{StaticResource PdfViewerSearchButtonToolbarItemStyle}" />
        <Setter Property="BusyIndicatorToolbarItemStyle" Value="{StaticResource PdfViewerSearchBusyIndicatorToolbarItemStyle}" />
    </Style>
    <Style TargetType="telerik:PdfViewerSearchContentView" BasedOn="{StaticResource PdfViewerSearchContentViewStyle}" />

    <!-- TODO: Discuss with designers the search results fill colors -->
    <Style x:Key="RadPdfViewerStyle" TargetType="telerik:RadPdfViewer">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadSurfaceColor}" />
    </Style>
    <Style TargetType="telerik:RadPdfViewer" BasedOn="{StaticResource RadPdfViewerStyle}" />

    <!-- RichTextEditor -->

    <!-- Applicable for the views of RichTextEditorFontFamilyToolbarItem and RichTextEditorFontSizeToolbarItem -->
    <Style x:Key="RichTextEditorListPickerToolbarItemViewStyle" TargetType="telerik:RichTextEditorListPickerToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}">
        <!-- BUG: Does not apply -->
        <Setter Property="DropDownContentStyle" Value="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />
    </Style>
    <Style TargetType="telerik:RichTextEditorListPickerToolbarItemView" BasedOn="{StaticResource RichTextEditorListPickerToolbarItemViewStyle}" />
    <!-- WORKAROUND: -->
    <Style TargetType="telerik:RichTextEditorListPickerToolbarItemViewContent" BasedOn="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />
    
    <DataTemplate x:Key="RichTextEditorColorPickerNullItemTemplate">
        <Grid WidthRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}"
              HeightRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}">
            <!-- null color selected -->
            <telerik:RadBorder BorderColor="{DynamicResource RadBorderColor}"
                               IsVisible="{Binding Source={RelativeSource AncestorType={x:Type telerik:ToolbarListItemView}}, Path=IsSelected}"
                               WidthRequest="{OnPlatform  Default=30, MacCatalyst=16, WinUI=24}"
                               HeightRequest="{OnPlatform Default=30, MacCatalyst=16, WinUI=24}"
                               CornerRadius="{OnPlatform Default=15, MacCatalyst=8, WinUI=12}"
                               BorderThickness="1"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
            <!-- null color -->
            <telerik:RadBorder WidthRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               HeightRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               CornerRadius="{OnPlatform Default=12, MacCatalyst=6, WinUI=10}"
                               BorderThickness="1"
                               BorderColor="{DynamicResource RadBorderColor}"
                               BackgroundColor="Transparent"
                               HorizontalOptions="Center"
                               VerticalOptions="Center">
                <telerik:RadBorder BackgroundColor="{DynamicResource RadBorderColor}"
                                   HeightRequest="2"
                                   Rotation="-45" />
            </telerik:RadBorder>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RichTextEditorColorPickerItemTemplate">
        <Grid WidthRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}"
              HeightRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}">
            <telerik:RadBorder BorderColor="{Binding}"
                               IsVisible="{Binding Source={RelativeSource AncestorType={x:Type telerik:ToolbarListItemView}}, Path=IsSelected}"                                          
                               WidthRequest="{OnPlatform  Default=30, MacCatalyst=16, WinUI=24}"
                               HeightRequest="{OnPlatform Default=30, MacCatalyst=16, WinUI=24}"
                               CornerRadius="{OnPlatform Default=15, MacCatalyst=8, WinUI=12}"
                               BorderThickness="1"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
            <telerik:RadBorder BackgroundColor="{Binding}"
                               WidthRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               HeightRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               CornerRadius="{OnPlatform Default=12, MacCatalyst=6, WinUI=10}"
                               BorderThickness="0"
                               BorderColor="Transparent"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RichTextEditorColorPickerWhiteItemTemplate">
        <Grid WidthRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}"
              HeightRequest="{OnPlatform Android=48, iOS=44, MacCatalyst=22, WinUI=40}">
            <telerik:RadBorder BorderColor="{DynamicResource RadBorderColor}"
                               IsVisible="{Binding Source={RelativeSource AncestorType={x:Type telerik:ToolbarListItemView}}, Path=IsSelected}"
                               WidthRequest="{OnPlatform  Default=30, MacCatalyst=16, WinUI=24}"
                               HeightRequest="{OnPlatform Default=30, MacCatalyst=16, WinUI=24}"
                               CornerRadius="{OnPlatform Default=15, MacCatalyst=8, WinUI=12}"
                               BorderThickness="1"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
            <telerik:RadBorder BackgroundColor="{Binding}"
                               WidthRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               HeightRequest="{OnPlatform Default=24, MacCatalyst=12, WinUI=20}"
                               CornerRadius="{OnPlatform Default=12, MacCatalyst=6, WinUI=10}"
                               BorderThickness="1"
                               BorderColor="{DynamicResource RadBorderColor}"
                               HorizontalOptions="Center"
                               VerticalOptions="Center" />
        </Grid>
    </DataTemplate>

    <telerik:RichTextEditorColorPickerItemTemplateSelector x:Key="RichTextEditorColorPickerItemTemplateSelector"
                                                           ItemTemplate="{StaticResource RichTextEditorColorPickerItemTemplate}"
                                                           NullTemplate="{StaticResource RichTextEditorColorPickerNullItemTemplate}"
                                                           WhiteTemplate="{StaticResource RichTextEditorColorPickerWhiteItemTemplate}" />

    <Style x:Key="RichTextEditorColorPickerToolbarItemViewStyle" TargetType="telerik:RichTextEditorColorPickerToolbarItemView" BasedOn="{StaticResource ButtonToolbarItemViewBaseStyle}">
        <!--BUG: ItemTemplate applies only on instance of RichTextEditorColorPickerToolbarItem or any of its inheritors:
                 <telerik:RadRichTextEditorToolbar AutoGenerateItems="False">
                     <telerik:RichTextEditorColorPickerToolbarItem ItemTemplate="{StaticResource RichTextEditorColorPickerItemTemplateSelector}" />
                     <telerik:RichTextEditorTextColorToolbarItem ItemTemplate="{StaticResource RichTextEditorColorPickerItemTemplateSelector}" />
                     <telerik:RichTextEditorHighlightTextColorToolbarItem ItemTemplate="{StaticResource RichTextEditorColorPickerItemTemplateSelector}" />
                 </telerik:RadRichTextEditorToolbar> -->
        <Setter Property="ItemTemplate" Value="{StaticResource RichTextEditorColorPickerItemTemplateSelector}" />
        <!-- BUG: Does not apply -->
        <Setter Property="DropDownContentStyle" Value="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />
    </Style>
    <Style TargetType="telerik:RichTextEditorColorPickerToolbarItemView" BasedOn="{StaticResource RichTextEditorColorPickerToolbarItemViewStyle}" />
    <Style TargetType="telerik:RichTextEditorColorPickerToolbarItemViewContent" BasedOn="{StaticResource DropDownButtonToolbarItemViewContentStyle}" />

    <Style x:Key="RichTextEditorDialogHeaderStyle" TargetType="telerik:RadBorder">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 0, 0, 1" />
        <Setter Property="Padding" Value="16, 12" />
    </Style>

    <Style x:Key="RichTextEditorDialogFooterStyle" TargetType="telerik:RadBorder">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="0, 1, 0, 0" />
        <Setter Property="Padding" Value="8" />
    </Style>

    <Style x:Key="RichTextEditorDialogOkButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadPrimaryButtonStyle}">
        <Setter Property="HorizontalOptions" Value="{OnPlatform Default=End, WinUI=Fill}" />
        <Setter Property="VerticalOptions" Value="Fill" />
    </Style>

    <Style x:Key="RichTextEditorDialogCancelButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="HorizontalOptions" Value="{OnPlatform Default=End, WinUI=Fill}" />
        <Setter Property="VerticalOptions" Value="Fill" />
    </Style>

    <ControlTemplate x:Key="RichTextEditorHyperlinkDialogTemplate">
        <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                           BorderColor="{TemplateBinding BorderColor}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Shadow="{DynamicResource PopupShadow}">
            <Grid RowDefinitions="Auto, *, Auto">
                <telerik:RadBorder Style="{TemplateBinding ActualHeaderStyle}">
                    <Label Text="{TemplateBinding HeaderText}"
                           TextColor="{DynamicResource RadSubtleColor}"
                           FontSize="16"
                           VerticalOptions="Center" />
                </telerik:RadBorder>
                <Grid Grid.Row="1"
                      RowDefinitions="*, *"
                      RowSpacing="{OnPlatform Default=4, WinUI=8}"
                      Padding="{OnPlatform Default='20, 12', WinUI='24, 12, 12, 24'}">
                    <Label Text="{TemplateBinding UrlLabelText}"
                           TextColor="{DynamicResource RadOnAppSurfaceColor}"
                           VerticalOptions="End" />
                    <!-- TODO: The original template is with Entry, consider using RadEntry for it as well -->
                    <telerik:RadEntry Grid.Row="1"
                                      Placeholder="{TemplateBinding UrlPlaceholderText}"
                                      Text="{TemplateBinding Url}"
                                      VerticalOptions="Start" />
                </Grid>
                <telerik:RadBorder Grid.Row="2"
                                   Style="{TemplateBinding ActualFooterStyle}">
                    <Grid ColumnDefinitions="{OnPlatform Default='*, Auto', WinUI='*, *'}"
                          VerticalOptions="Center">
                        <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                           Text="{TemplateBinding CancelButtonText}"
                                           Style="{TemplateBinding ActualCancelButtonStyle}"
                                           Command="{TemplateBinding CancelCommand}" />
                        <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                           Text="{TemplateBinding OkButtonText}"
                                           Style="{TemplateBinding ActualOkButtonStyle}"
                                           Command="{TemplateBinding OkCommand}" />
                    </Grid>
                </telerik:RadBorder>
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>
    <Style x:Key="RichTextEditorHyperlinkDialogContentStyle" TargetType="telerik:RichTextEditorHyperlinkDialogToolbarItemViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HeaderStyle" Value="{StaticResource RichTextEditorDialogHeaderStyle}" />
        <Setter Property="FooterStyle" Value="{StaticResource RichTextEditorDialogFooterStyle}" />
        <Setter Property="OkButtonStyle" Value="{StaticResource RichTextEditorDialogOkButtonStyle}" />
        <Setter Property="CancelButtonStyle" Value="{StaticResource RichTextEditorDialogCancelButtonStyle}" />
        <!-- BUG: Does not apply; only possible way is to set it as PopupContentTemplate on instances of RichTextEditorHyperlinkNavigationToolbarItem -->
        <!-- <Setter Property="ControlTemplate" Value="{StaticResource RichTextEditorHyperlinkDialogTemplate}" /> -->
    </Style>
    <!-- BUG: Applies only as PopupContentStyle on instances of RichTextEditorHyperlinkNavigationToolbarItem as explicit style -->
    <!-- <Style TargetType="telerik:RichTextEditorHyperlinkDialogToolbarItemViewContent" BasedOn="{StaticResource RichTextEditorHyperlinkDialogContentStyle}" /> -->

    <ControlTemplate x:Key="RichTextEditorImageDialogTemplate">
        <telerik:RadBorder BackgroundColor="{TemplateBinding BackgroundColor}"
                           BorderColor="{TemplateBinding BorderColor}"
                           BorderThickness="{TemplateBinding BorderThickness}"
                           CornerRadius="{TemplateBinding CornerRadius}"
                           Shadow="{StaticResource PopupShadow}">
            <Grid RowDefinitions="Auto, *, Auto">
                <telerik:RadBorder Style="{TemplateBinding ActualHeaderStyle}">
                    <Label Text="{TemplateBinding HeaderText}"
                           TextColor="{DynamicResource RadSubtleColor}"
                           FontSize="16"
                           VerticalOptions="Center" />
                </telerik:RadBorder>
                <VerticalStackLayout Grid.Row="1"
                                     Padding="16, 12"
                                     Spacing="12">
                    <Grid HorizontalOptions="Center">
                        <!-- NOTE: The original template is ToolbarImage which is internal and seems for workaround purposes -->
                        <Image WidthRequest="{OnPlatform Default=96, WinUI=112}"
                               HeightRequest="{OnPlatform Default=96, WinUI=112}"
                               Aspect="AspectFit"
                               Source="{TemplateBinding ImageSource}" />
                        <telerik:RadButton Text="{TemplateBinding PickButtonText}"
                                           Style="{TemplateBinding ActualPickButtonStyle}"
                                           Command="{TemplateBinding PickCommand}" />
                    </Grid>
                    <Label Text="{TemplateBinding ResizeLabelText}"
                           TextColor="{DynamicResource RadOnAppSurfaceColor}" />
                    <Grid ColumnDefinitions="Auto, *, Auto"
                          ColumnSpacing="4">
                        <Label VerticalOptions="Center"
                               Text="{TemplateBinding MinimumLabelText}"
                               TextColor="{DynamicResource RadOnAppSurfaceColor}" />
                        <!-- TODO: The original template is with Slider, consider using RadSlider for it as well -->
                        <telerik:RadSlider Grid.Column="1"
                                           Minimum="{TemplateBinding MinimumScale}"
                                           Maximum="{TemplateBinding MaximumScale}"
                                           Value="{TemplateBinding ImageScale}" />
                        <Label Grid.Column="2"
                               VerticalOptions="Center"
                               Text="{TemplateBinding MaximumLabelText}"
                               TextColor="{DynamicResource RadOnAppSurfaceColor}" />
                    </Grid>
                </VerticalStackLayout>
                <telerik:RadBorder Grid.Row="2"
                                   Style="{TemplateBinding ActualFooterStyle}">
                    <Grid ColumnDefinitions="{OnPlatform Default='*, Auto', WinUI='*, *'}"
                          VerticalOptions="Center">
                        <telerik:RadButton Grid.Column="{OnPlatform Default=0, WinUI=1}"
                                           Text="{TemplateBinding CancelButtonText}"
                                           Style="{TemplateBinding ActualCancelButtonStyle}"
                                           Command="{TemplateBinding CancelCommand}" />
                        <telerik:RadButton Grid.Column="{OnPlatform Default=1, WinUI=0}"
                                           Text="{TemplateBinding OkButtonText}"
                                           Style="{TemplateBinding ActualOkButtonStyle}"
                                           Command="{TemplateBinding OkCommand}" />
                    </Grid>
                </telerik:RadBorder>
            </Grid>
        </telerik:RadBorder>
    </ControlTemplate>
    <Style x:Key="RichTextEditorImageDialogPickButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="FontFamily" Value="{x:Static telerikMaui:TelerikFont.Name}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="WidthRequest" Value="30" />
        <Setter Property="HeightRequest" Value="30" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="VerticalOptions" Value="End" />
    </Style>
    <Style x:Key="RichTextEditorImageDialogContentStyle" TargetType="telerik:RichTextEditorImageDialogToolbarItemViewContent">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="HeaderStyle" Value="{StaticResource RichTextEditorDialogHeaderStyle}" />
        <Setter Property="FooterStyle" Value="{StaticResource RichTextEditorDialogFooterStyle}" />
        <Setter Property="OkButtonStyle" Value="{StaticResource RichTextEditorDialogOkButtonStyle}" />
        <Setter Property="CancelButtonStyle" Value="{StaticResource RichTextEditorDialogCancelButtonStyle}" />
        <Setter Property="PickButtonStyle" Value="{StaticResource RichTextEditorImageDialogPickButtonStyle}" />
        <!-- BUG: Does not apply; only possible way is to set it as PopupContentTemplate on instances of RichTextEditorAddOrEditImageToolbarItem -->
        <!-- <Setter Property="ControlTemplate" Value="{StaticResource RichTextEditorImageDialogTemplate}" /> -->
    </Style>
    <!-- BUG: Applies only as PopupContentStyle on instances of RichTextEditorAddOrEditImageToolbarItem as explicit style -->
    <!-- <Style TargetType="telerik:RichTextEditorImageDialogToolbarItemViewContent" BasedOn="{StaticResource RichTextEditorImageDialogContentStyle}" /> -->

    <!-- TODO: Style RichTextEditorAddOrEditHyperlinkToolbarItem, RichTextEditorRemoveHyperlinkToolbarItem, RichTextEditorAddOrEditImageToolbarItem for Desktop -->
    <Style x:Key="RadRichTextEditorToolbarStyle" TargetType="telerik:RadRichTextEditorToolbar" BasedOn="{StaticResource RadToolbarStyle}" />
    <Style TargetType="telerik:RadRichTextEditorToolbar" BasedOn="{StaticResource RadRichTextEditorToolbarStyle}" />

    <!-- TODO: Discuss whether BackgroundColor should always be white -->
    <!-- BUG: Changing swatch results to disabled toolbar items that launch dialogs -->
    <Style x:Key="RadRichTextEditorStyle" TargetType="telerik:RadRichTextEditor">
        <Setter Property="BackgroundColor" Value="{DynamicResource RadAppSurfaceColor}" />
        <Setter Property="BorderColor" Value="{DynamicResource RadBorderColor}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style TargetType="telerik:RadRichTextEditor" BasedOn="{StaticResource RadRichTextEditorStyle}" />

</ResourceDictionary>
